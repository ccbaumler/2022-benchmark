<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="458" onload="init(evt)" viewBox="0 0 1200 458" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="458" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o /home/sjnair/2022-benchmark/sourmash-gather/output/svg_files/SRR1977304.abundtrim.fq.gz.sig.svg -- sourmash gather SRR1977304.abundtrim.fq.gz.sig /group/ctbrowngrp/sourmash-db/gtdb-rs207/gtdb-rs207.genomic-reps.dna.k31.zip -o /home/sjnair/2022-benchmark/sourmash-gather/output/csv_files/SRR1977304.abundtrim.fq.gz.sig.csv</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="447.00"> </text><svg id="frames" x="10" width="1180" total_samples="52663"><g><title>gather (sourmash/commands.py:700) (86 samples, 0.16%)</title><rect x="0.0323%" y="116" width="0.1633%" height="15" fill="rgb(227,0,7)" fg:x="17" fg:w="86"/><text x="0.2823%" y="126.50"></text></g><g><title>load_query_signature (sourmash/sourmash_args.py:213) (86 samples, 0.16%)</title><rect x="0.0323%" y="132" width="0.1633%" height="15" fill="rgb(217,0,24)" fg:x="17" fg:w="86"/><text x="0.2823%" y="142.50"></text></g><g><title>load_file_as_signatures (sourmash/sourmash_args.py:536) (86 samples, 0.16%)</title><rect x="0.0323%" y="148" width="0.1633%" height="15" fill="rgb(221,193,54)" fg:x="17" fg:w="86"/><text x="0.2823%" y="158.50"></text></g><g><title>_load_database (sourmash/sourmash_args.py:453) (86 samples, 0.16%)</title><rect x="0.0323%" y="164" width="0.1633%" height="15" fill="rgb(248,212,6)" fg:x="17" fg:w="86"/><text x="0.2823%" y="174.50"></text></g><g><title>_multiindex_load_from_path (sourmash/sourmash_args.py:383) (77 samples, 0.15%)</title><rect x="0.0494%" y="180" width="0.1462%" height="15" fill="rgb(208,68,35)" fg:x="26" fg:w="77"/><text x="0.2994%" y="190.50"></text></g><g><title>load_from_path (sourmash/index/__init__.py:1020) (77 samples, 0.15%)</title><rect x="0.0494%" y="196" width="0.1462%" height="15" fill="rgb(232,128,0)" fg:x="26" fg:w="77"/><text x="0.2994%" y="206.50"></text></g><g><title>load (sourmash/index/__init__.py:408) (77 samples, 0.15%)</title><rect x="0.0494%" y="212" width="0.1462%" height="15" fill="rgb(207,160,47)" fg:x="26" fg:w="77"/><text x="0.2994%" y="222.50"></text></g><g><title>__init__ (sourmash/index/__init__.py:378) (77 samples, 0.15%)</title><rect x="0.0494%" y="228" width="0.1462%" height="15" fill="rgb(228,23,34)" fg:x="26" fg:w="77"/><text x="0.2994%" y="238.50"></text></g><g><title>load_signatures (sourmash/signature.py:393) (77 samples, 0.15%)</title><rect x="0.0494%" y="244" width="0.1462%" height="15" fill="rgb(218,30,26)" fg:x="26" fg:w="77"/><text x="0.2994%" y="254.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (77 samples, 0.15%)</title><rect x="0.0494%" y="260" width="0.1462%" height="15" fill="rgb(220,122,19)" fg:x="26" fg:w="77"/><text x="0.2994%" y="270.50"></text></g><g><title>_load_database (sourmash/sourmash_args.py:453) (130 samples, 0.25%)</title><rect x="0.1956%" y="148" width="0.2469%" height="15" fill="rgb(250,228,42)" fg:x="103" fg:w="130"/><text x="0.4456%" y="158.50"></text></g><g><title>_load_zipfile (sourmash/sourmash_args.py:416) (113 samples, 0.21%)</title><rect x="0.2279%" y="164" width="0.2146%" height="15" fill="rgb(240,193,28)" fg:x="120" fg:w="113"/><text x="0.4779%" y="174.50"></text></g><g><title>load (sourmash/index/__init__.py:587) (109 samples, 0.21%)</title><rect x="0.2355%" y="180" width="0.2070%" height="15" fill="rgb(216,20,37)" fg:x="124" fg:w="109"/><text x="0.4855%" y="190.50"></text></g><g><title>__init__ (sourmash/index/__init__.py:520) (109 samples, 0.21%)</title><rect x="0.2355%" y="196" width="0.2070%" height="15" fill="rgb(206,188,39)" fg:x="124" fg:w="109"/><text x="0.4855%" y="206.50"></text></g><g><title>_load_manifest (sourmash/index/__init__.py:542) (100 samples, 0.19%)</title><rect x="0.2525%" y="212" width="0.1899%" height="15" fill="rgb(217,207,13)" fg:x="133" fg:w="100"/><text x="0.5025%" y="222.50"></text></g><g><title>load_dbs_and_sigs (sourmash/sourmash_args.py:308) (131 samples, 0.25%)</title><rect x="0.1956%" y="132" width="0.2488%" height="15" fill="rgb(231,73,38)" fg:x="103" fg:w="131"/><text x="0.4456%" y="142.50"></text></g><g><title>gather (sourmash/commands.py:725) (138 samples, 0.26%)</title><rect x="0.1956%" y="116" width="0.2620%" height="15" fill="rgb(225,20,46)" fg:x="103" fg:w="138"/><text x="0.4456%" y="126.50"></text></g><g><title>signatures (sourmash/index/__init__.py:615) (65 samples, 0.12%)</title><rect x="0.5222%" y="196" width="0.1234%" height="15" fill="rgb(210,31,41)" fg:x="275" fg:w="65"/><text x="0.7722%" y="206.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (436 samples, 0.83%)</title><rect x="0.7425%" y="244" width="0.8279%" height="15" fill="rgb(221,200,47)" fg:x="391" fg:w="436"/><text x="0.9925%" y="254.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (446 samples, 0.85%)</title><rect x="0.7292%" y="228" width="0.8469%" height="15" fill="rgb(226,26,5)" fg:x="384" fg:w="446"/><text x="0.9792%" y="238.50"></text></g><g><title>load (sourmash/sbt_storage.py:158) (459 samples, 0.87%)</title><rect x="0.7235%" y="212" width="0.8716%" height="15" fill="rgb(249,33,26)" fg:x="381" fg:w="459"/><text x="0.9735%" y="222.50"></text></g><g><title>signatures (sourmash/index/__init__.py:616) (581 samples, 1.10%)</title><rect x="0.6456%" y="196" width="1.1032%" height="15" fill="rgb(235,183,28)" fg:x="340" fg:w="581"/><text x="0.8956%" y="206.50"></text></g><g><title>load_signatures (sourmash/signature.py:374) (116 samples, 0.22%)</title><rect x="1.8305%" y="212" width="0.2203%" height="15" fill="rgb(221,5,38)" fg:x="964" fg:w="116"/><text x="2.0805%" y="222.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (30,894 samples, 58.66%)</title><rect x="2.1172%" y="228" width="58.6636%" height="15" fill="rgb(247,18,42)" fg:x="1115" fg:w="30894"/><text x="2.3672%" y="238.50">rustcall (sourmash/utils.py:68)</text></g><g><title>load_signatures (sourmash/signature.py:406) (30,914 samples, 58.70%)</title><rect x="2.0963%" y="212" width="58.7016%" height="15" fill="rgb(241,131,45)" fg:x="1104" fg:w="30914"/><text x="2.3463%" y="222.50">load_signatures (sourmash/signature.py:406)</text></g><g><title>__copy__ (sourmash/signature.py:229) (143 samples, 0.27%)</title><rect x="60.8966%" y="244" width="0.2715%" height="15" fill="rgb(249,31,29)" fg:x="32070" fg:w="143"/><text x="61.1466%" y="254.50"></text></g><g><title>__copy__ (sourmash/signature.py:230) (55 samples, 0.10%)</title><rect x="61.1682%" y="244" width="0.1044%" height="15" fill="rgb(225,111,53)" fg:x="32213" fg:w="55"/><text x="61.4182%" y="254.50"></text></g><g><title>__copy__ (sourmash/signature.py:231) (82 samples, 0.16%)</title><rect x="61.2726%" y="244" width="0.1557%" height="15" fill="rgb(238,160,17)" fg:x="32268" fg:w="82"/><text x="61.5226%" y="254.50"></text></g><g><title>name (sourmash/signature.py:98) (77 samples, 0.15%)</title><rect x="61.2821%" y="260" width="0.1462%" height="15" fill="rgb(214,148,48)" fg:x="32273" fg:w="77"/><text x="61.5321%" y="270.50"></text></g><g><title>to_frozen (sourmash/signature.py:240) (317 samples, 0.60%)</title><rect x="60.8853%" y="228" width="0.6019%" height="15" fill="rgb(232,36,49)" fg:x="32064" fg:w="317"/><text x="61.1353%" y="238.50"></text></g><g><title>signatures (sourmash/index/__init__.py:617) (31,470 samples, 59.76%)</title><rect x="1.7489%" y="196" width="59.7573%" height="15" fill="rgb(209,103,24)" fg:x="921" fg:w="31470"/><text x="1.9989%" y="206.50">signatures (sourmash/index/__init__.py:617)</text></g><g><title>load_signatures (sourmash/signature.py:424) (329 samples, 0.62%)</title><rect x="60.8815%" y="212" width="0.6247%" height="15" fill="rgb(229,88,8)" fg:x="32062" fg:w="329"/><text x="61.1315%" y="222.50"></text></g><g><title>__contains__ (sourmash/manifest.py:337) (95 samples, 0.18%)</title><rect x="61.5271%" y="212" width="0.1804%" height="15" fill="rgb(213,181,19)" fg:x="32402" fg:w="95"/><text x="61.7771%" y="222.50"></text></g><g><title>md5sum (sourmash/signature.py:83) (91 samples, 0.17%)</title><rect x="61.5347%" y="228" width="0.1728%" height="15" fill="rgb(254,191,54)" fg:x="32406" fg:w="91"/><text x="61.7847%" y="238.50"></text></g><g><title>signatures_with_location (sourmash/index/__init__.py:79) (32,235 samples, 61.21%)</title><rect x="0.5222%" y="180" width="61.2100%" height="15" fill="rgb(241,83,37)" fg:x="275" fg:w="32235"/><text x="0.7722%" y="190.50">signatures_with_location (sourmash/index/__init__.py:79)</text></g><g><title>signatures (sourmash/index/__init__.py:620) (119 samples, 0.23%)</title><rect x="61.5062%" y="196" width="0.2260%" height="15" fill="rgb(233,36,39)" fg:x="32391" fg:w="119"/><text x="61.7562%" y="206.50"></text></g><g><title>find (sourmash/index/__init__.py:146) (32,305 samples, 61.34%)</title><rect x="0.4842%" y="164" width="61.3429%" height="15" fill="rgb(226,3,54)" fg:x="255" fg:w="32305"/><text x="0.7342%" y="174.50">find (sourmash/index/__init__.py:146)</text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:108) (75 samples, 0.14%)</title><rect x="61.9581%" y="196" width="0.1424%" height="15" fill="rgb(245,192,40)" fg:x="32629" fg:w="75"/><text x="62.2081%" y="206.50"></text></g><g><title>flatten (sourmash/minhash.py:678) (74 samples, 0.14%)</title><rect x="62.2050%" y="228" width="0.1405%" height="15" fill="rgb(238,167,29)" fg:x="32759" fg:w="74"/><text x="62.4550%" y="238.50"></text></g><g><title>flatten (sourmash/minhash.py:679) (70 samples, 0.13%)</title><rect x="62.3455%" y="228" width="0.1329%" height="15" fill="rgb(232,182,51)" fg:x="32833" fg:w="70"/><text x="62.5955%" y="238.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (512 samples, 0.97%)</title><rect x="62.6132%" y="276" width="0.9722%" height="15" fill="rgb(231,60,39)" fg:x="32974" fg:w="512"/><text x="62.8632%" y="286.50"></text></g><g><title>add_many (sourmash/minhash.py:452) (527 samples, 1.00%)</title><rect x="62.5942%" y="244" width="1.0007%" height="15" fill="rgb(208,69,12)" fg:x="32964" fg:w="527"/><text x="62.8442%" y="254.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (520 samples, 0.99%)</title><rect x="62.6075%" y="260" width="0.9874%" height="15" fill="rgb(235,93,37)" fg:x="32971" fg:w="520"/><text x="62.8575%" y="270.50"></text></g><g><title>flatten (sourmash/minhash.py:1099) (756 samples, 1.44%)</title><rect x="62.1613%" y="212" width="1.4355%" height="15" fill="rgb(213,116,39)" fg:x="32736" fg:w="756"/><text x="62.4113%" y="222.50"></text></g><g><title>flatten (sourmash/minhash.py:683) (532 samples, 1.01%)</title><rect x="62.5866%" y="228" width="1.0102%" height="15" fill="rgb(222,207,29)" fg:x="32960" fg:w="532"/><text x="62.8366%" y="238.50"></text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:111) (789 samples, 1.50%)</title><rect x="62.1214%" y="196" width="1.4982%" height="15" fill="rgb(206,96,30)" fg:x="32715" fg:w="789"/><text x="62.3714%" y="206.50"></text></g><g><title>find (sourmash/index/__init__.py:147) (969 samples, 1.84%)</title><rect x="61.8271%" y="164" width="1.8400%" height="15" fill="rgb(218,138,4)" fg:x="32560" fg:w="969"/><text x="62.0771%" y="174.50">f..</text></g><g><title>prepare_subject (sourmash/index/__init__.py:131) (904 samples, 1.72%)</title><rect x="61.9505%" y="180" width="1.7166%" height="15" fill="rgb(250,191,14)" fg:x="32625" fg:w="904"/><text x="62.2005%" y="190.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (4,177 samples, 7.93%)</title><rect x="63.8057%" y="212" width="7.9316%" height="15" fill="rgb(239,60,40)" fg:x="33602" fg:w="4177"/><text x="64.0557%" y="222.50">rustcall (s..</text></g><g><title>minhash (sourmash/signature.py:47) (4,213 samples, 8.00%)</title><rect x="63.7905%" y="180" width="7.9999%" height="15" fill="rgb(206,27,48)" fg:x="33594" fg:w="4213"/><text x="64.0405%" y="190.50">minhash (so..</text></g><g><title>_methodcall (sourmash/utils.py:25) (4,210 samples, 7.99%)</title><rect x="63.7962%" y="196" width="7.9942%" height="15" fill="rgb(225,35,8)" fg:x="33597" fg:w="4210"/><text x="64.0462%" y="206.50">_methodcall..</text></g><g><title>find (sourmash/index/__init__.py:149) (4,512 samples, 8.57%)</title><rect x="63.6671%" y="164" width="8.5677%" height="15" fill="rgb(250,213,24)" fg:x="33529" fg:w="4512"/><text x="63.9171%" y="174.50">find (sourma..</text></g><g><title>prepare_query (sourmash/index/__init__.py:134) (234 samples, 0.44%)</title><rect x="71.7904%" y="180" width="0.4443%" height="15" fill="rgb(247,123,22)" fg:x="37807" fg:w="234"/><text x="72.0404%" y="190.50"></text></g><g><title>scaled (sourmash/minhash.py:526) (83 samples, 0.16%)</title><rect x="72.0772%" y="196" width="0.1576%" height="15" fill="rgb(231,138,38)" fg:x="37958" fg:w="83"/><text x="72.3272%" y="206.50"></text></g><g><title>_get_scaled_for_max_hash (sourmash/minhash.py:66) (68 samples, 0.13%)</title><rect x="72.1057%" y="212" width="0.1291%" height="15" fill="rgb(231,145,46)" fg:x="37973" fg:w="68"/><text x="72.3557%" y="222.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (12,539 samples, 23.81%)</title><rect x="72.4133%" y="212" width="23.8099%" height="15" fill="rgb(251,118,11)" fg:x="38135" fg:w="12539"/><text x="72.6633%" y="222.50">rustcall (sourmash/utils.py:68)</text></g><g><title>intersection_and_union_size (sourmash/minhash.py:617) (12,558 samples, 23.85%)</title><rect x="72.3962%" y="180" width="23.8460%" height="15" fill="rgb(217,147,25)" fg:x="38126" fg:w="12558"/><text x="72.6462%" y="190.50">intersection_and_union_size (sourmash/..</text></g><g><title>_methodcall (sourmash/utils.py:25) (12,555 samples, 23.84%)</title><rect x="72.4019%" y="196" width="23.8403%" height="15" fill="rgb(247,81,37)" fg:x="38129" fg:w="12555"/><text x="72.6519%" y="206.50">_methodcall (sourmash/utils.py:25)</text></g><g><title>find (sourmash/index/__init__.py:154) (12,637 samples, 24.00%)</title><rect x="72.2879%" y="164" width="23.9960%" height="15" fill="rgb(209,12,38)" fg:x="38069" fg:w="12637"/><text x="72.5379%" y="174.50">find (sourmash/index/__init__.py:154)</text></g><g><title>counter_gather (sourmash/index/__init__.py:303) (50,532 samples, 95.95%)</title><rect x="0.4823%" y="132" width="95.9535%" height="15" fill="rgb(227,1,9)" fg:x="254" fg:w="50532"/><text x="0.7323%" y="142.50">counter_gather (sourmash/index/__init__.py:303)</text></g><g><title>prefetch (sourmash/index/__init__.py:240) (50,532 samples, 95.95%)</title><rect x="0.4823%" y="148" width="95.9535%" height="15" fill="rgb(248,47,43)" fg:x="254" fg:w="50532"/><text x="0.7323%" y="158.50">prefetch (sourmash/index/__init__.py:240)</text></g><g><title>count_common (sourmash/minhash.py:607) (59 samples, 0.11%)</title><rect x="96.4377%" y="164" width="0.1120%" height="15" fill="rgb(221,10,30)" fg:x="50787" fg:w="59"/><text x="96.6877%" y="174.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (59 samples, 0.11%)</title><rect x="96.4377%" y="180" width="0.1120%" height="15" fill="rgb(210,229,1)" fg:x="50787" fg:w="59"/><text x="96.6877%" y="190.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (59 samples, 0.11%)</title><rect x="96.4377%" y="196" width="0.1120%" height="15" fill="rgb(222,148,37)" fg:x="50787" fg:w="59"/><text x="96.6877%" y="206.50"></text></g><g><title>add (sourmash/index/__init__.py:728) (61 samples, 0.12%)</title><rect x="96.4358%" y="148" width="0.1158%" height="15" fill="rgb(234,67,33)" fg:x="50786" fg:w="61"/><text x="96.6858%" y="158.50"></text></g><g><title>gather (sourmash/commands.py:760) (50,596 samples, 96.08%)</title><rect x="0.4823%" y="116" width="96.0750%" height="15" fill="rgb(247,98,35)" fg:x="254" fg:w="50596"/><text x="0.7323%" y="126.50">gather (sourmash/commands.py:760)</text></g><g><title>counter_gather (sourmash/index/__init__.py:304) (64 samples, 0.12%)</title><rect x="96.4358%" y="132" width="0.1215%" height="15" fill="rgb(247,138,52)" fg:x="50786" fg:w="64"/><text x="96.6858%" y="142.50"></text></g><g><title>flatten_and_intersect_scaled (sourmash/minhash.py:136) (195 samples, 0.37%)</title><rect x="96.5915%" y="148" width="0.3703%" height="15" fill="rgb(213,79,30)" fg:x="50868" fg:w="195"/><text x="96.8415%" y="158.50"></text></g><g><title>intersection (sourmash/minhash.py:930) (195 samples, 0.37%)</title><rect x="96.5915%" y="164" width="0.3703%" height="15" fill="rgb(246,177,23)" fg:x="50868" fg:w="195"/><text x="96.8415%" y="174.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (195 samples, 0.37%)</title><rect x="96.5915%" y="180" width="0.3703%" height="15" fill="rgb(230,62,27)" fg:x="50868" fg:w="195"/><text x="96.8415%" y="190.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (195 samples, 0.37%)</title><rect x="96.5915%" y="196" width="0.3703%" height="15" fill="rgb(216,154,8)" fg:x="50868" fg:w="195"/><text x="96.8415%" y="206.50"></text></g><g><title>union_found (sourmash/index/__init__.py:766) (214 samples, 0.41%)</title><rect x="96.5574%" y="132" width="0.4064%" height="15" fill="rgb(244,35,45)" fg:x="50850" fg:w="214"/><text x="96.8074%" y="142.50"></text></g><g><title>gather (sourmash/commands.py:769) (229 samples, 0.43%)</title><rect x="96.5574%" y="116" width="0.4348%" height="15" fill="rgb(251,115,12)" fg:x="50850" fg:w="229"/><text x="96.8074%" y="126.50"></text></g><g><title>gather (sourmash/commands.py:771) (861 samples, 1.63%)</title><rect x="96.9922%" y="116" width="1.6349%" height="15" fill="rgb(240,54,50)" fg:x="51079" fg:w="861"/><text x="97.2422%" y="126.50"></text></g><g><title>remove_many (sourmash/minhash.py:463) (861 samples, 1.63%)</title><rect x="96.9922%" y="132" width="1.6349%" height="15" fill="rgb(233,84,52)" fg:x="51079" fg:w="861"/><text x="97.2422%" y="142.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (861 samples, 1.63%)</title><rect x="96.9922%" y="148" width="1.6349%" height="15" fill="rgb(207,117,47)" fg:x="51079" fg:w="861"/><text x="97.2422%" y="158.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (861 samples, 1.63%)</title><rect x="96.9922%" y="164" width="1.6349%" height="15" fill="rgb(249,43,39)" fg:x="51079" fg:w="861"/><text x="97.2422%" y="174.50"></text></g><g><title>consume (sourmash/index/__init__.py:851) (81 samples, 0.15%)</title><rect x="98.7335%" y="164" width="0.1538%" height="15" fill="rgb(209,38,44)" fg:x="51996" fg:w="81"/><text x="98.9835%" y="174.50"></text></g><g><title>minhash (sourmash/signature.py:47) (63 samples, 0.12%)</title><rect x="98.7676%" y="180" width="0.1196%" height="15" fill="rgb(236,212,23)" fg:x="52014" fg:w="63"/><text x="99.0176%" y="190.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (58 samples, 0.11%)</title><rect x="98.7771%" y="196" width="0.1101%" height="15" fill="rgb(242,79,21)" fg:x="52019" fg:w="58"/><text x="99.0271%" y="206.50"></text></g><g><title>__next__ (sourmash/search.py:754) (185 samples, 0.35%)</title><rect x="98.6898%" y="132" width="0.3513%" height="15" fill="rgb(211,96,35)" fg:x="51973" fg:w="185"/><text x="98.9398%" y="142.50"></text></g><g><title>_find_best (sourmash/search.py:651) (164 samples, 0.31%)</title><rect x="98.7297%" y="148" width="0.3114%" height="15" fill="rgb(253,215,40)" fg:x="51994" fg:w="164"/><text x="98.9797%" y="158.50"></text></g><g><title>consume (sourmash/index/__init__.py:852) (81 samples, 0.15%)</title><rect x="98.8873%" y="164" width="0.1538%" height="15" fill="rgb(211,81,21)" fg:x="52077" fg:w="81"/><text x="99.1373%" y="174.50"></text></g><g><title>count_common (sourmash/minhash.py:607) (78 samples, 0.15%)</title><rect x="98.8930%" y="180" width="0.1481%" height="15" fill="rgb(208,190,38)" fg:x="52080" fg:w="78"/><text x="99.1430%" y="190.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (73 samples, 0.14%)</title><rect x="98.9025%" y="196" width="0.1386%" height="15" fill="rgb(235,213,38)" fg:x="52085" fg:w="73"/><text x="99.1525%" y="206.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (71 samples, 0.13%)</title><rect x="98.9063%" y="212" width="0.1348%" height="15" fill="rgb(237,122,38)" fg:x="52087" fg:w="71"/><text x="99.1563%" y="222.50"></text></g><g><title>__next__ (sourmash/search.py:788) (61 samples, 0.12%)</title><rect x="99.1835%" y="132" width="0.1158%" height="15" fill="rgb(244,218,35)" fg:x="52233" fg:w="61"/><text x="99.4335%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (sourmash/search.py:788) (58 samples, 0.11%)</title><rect x="99.1892%" y="148" width="0.1101%" height="15" fill="rgb(240,68,47)" fg:x="52236" fg:w="58"/><text x="99.4392%" y="158.50"></text></g><g><title>intersection (sourmash/minhash.py:930) (54 samples, 0.10%)</title><rect x="99.3943%" y="228" width="0.1025%" height="15" fill="rgb(210,16,53)" fg:x="52344" fg:w="54"/><text x="99.6443%" y="238.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (54 samples, 0.10%)</title><rect x="99.3943%" y="244" width="0.1025%" height="15" fill="rgb(235,124,12)" fg:x="52344" fg:w="54"/><text x="99.6443%" y="254.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (54 samples, 0.10%)</title><rect x="99.3943%" y="260" width="0.1025%" height="15" fill="rgb(224,169,11)" fg:x="52344" fg:w="54"/><text x="99.6443%" y="270.50"></text></g><g><title>init_sigcomparison (sourmash/search.py:371) (55 samples, 0.10%)</title><rect x="99.3943%" y="180" width="0.1044%" height="15" fill="rgb(250,166,2)" fg:x="52344" fg:w="55"/><text x="99.6443%" y="190.50"></text></g><g><title>total_unique_intersect_hashes (sourmash/sketchcomparison.py:124) (55 samples, 0.10%)</title><rect x="99.3943%" y="196" width="0.1044%" height="15" fill="rgb(242,216,29)" fg:x="52344" fg:w="55"/><text x="99.6443%" y="206.50"></text></g><g><title>intersect_mh (sourmash/sketchcomparison.py:50) (55 samples, 0.10%)</title><rect x="99.3943%" y="212" width="0.1044%" height="15" fill="rgb(230,116,27)" fg:x="52344" fg:w="55"/><text x="99.6443%" y="222.50"></text></g><g><title>__post_init__ (sourmash/search.py:514) (170 samples, 0.32%)</title><rect x="99.3012%" y="164" width="0.3228%" height="15" fill="rgb(228,99,48)" fg:x="52295" fg:w="170"/><text x="99.5512%" y="174.50"></text></g><g><title>init_sigcomparison (sourmash/search.py:376) (56 samples, 0.11%)</title><rect x="99.5177%" y="180" width="0.1063%" height="15" fill="rgb(253,11,6)" fg:x="52409" fg:w="56"/><text x="99.7677%" y="190.50"></text></g><g><title>gather (sourmash/commands.py:815) (573 samples, 1.09%)</title><rect x="98.6822%" y="116" width="1.0881%" height="15" fill="rgb(247,143,39)" fg:x="51969" fg:w="573"/><text x="98.9322%" y="126.50"></text></g><g><title>__next__ (sourmash/search.py:794) (248 samples, 0.47%)</title><rect x="99.2993%" y="132" width="0.4709%" height="15" fill="rgb(236,97,10)" fg:x="52294" fg:w="248"/><text x="99.5493%" y="142.50"></text></g><g><title>__init__ (&lt;string&gt;:19) (247 samples, 0.47%)</title><rect x="99.3012%" y="148" width="0.4690%" height="15" fill="rgb(233,208,19)" fg:x="52295" fg:w="247"/><text x="99.5512%" y="158.50"></text></g><g><title>__post_init__ (sourmash/search.py:516) (76 samples, 0.14%)</title><rect x="99.6259%" y="164" width="0.1443%" height="15" fill="rgb(216,164,2)" fg:x="52466" fg:w="76"/><text x="99.8759%" y="174.50"></text></g><g><title>main (sourmash/__main__.py:13) (52,545 samples, 99.78%)</title><rect x="0.0000%" y="84" width="99.7759%" height="15" fill="rgb(220,129,5)" fg:x="0" fg:w="52545"/><text x="0.2500%" y="94.50">main (sourmash/__main__.py:13)</text></g><g><title>main (sourmash/cli/gather.py:158) (52,545 samples, 99.78%)</title><rect x="0.0000%" y="100" width="99.7759%" height="15" fill="rgb(242,17,10)" fg:x="0" fg:w="52545"/><text x="0.2500%" y="110.50">main (sourmash/cli/gather.py:158)</text></g><g><title>&lt;module&gt; (sourmash:11) (52,549 samples, 99.78%)</title><rect x="0.0000%" y="68" width="99.7835%" height="15" fill="rgb(242,107,0)" fg:x="0" fg:w="52549"/><text x="0.2500%" y="78.50">&lt;module&gt; (sourmash:11)</text></g><g><title>&lt;module&gt; (sourmash/distance_utils.py:7) (56 samples, 0.11%)</title><rect x="99.8424%" y="404" width="0.1063%" height="15" fill="rgb(251,28,31)" fg:x="52580" fg:w="56"/><text x="100.0924%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (56 samples, 0.11%)</title><rect x="99.8424%" y="420" width="0.1063%" height="15" fill="rgb(233,223,10)" fg:x="52580" fg:w="56"/><text x="100.0924%" y="430.50"></text></g><g><title>all (52,663 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(215,21,27)" fg:x="0" fg:w="52663"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (sourmash:7) (114 samples, 0.22%)</title><rect x="99.7835%" y="68" width="0.2165%" height="15" fill="rgb(232,23,21)" fg:x="52549" fg:w="114"/><text x="100.0335%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (114 samples, 0.22%)</title><rect x="99.7835%" y="84" width="0.2165%" height="15" fill="rgb(244,5,23)" fg:x="52549" fg:w="114"/><text x="100.0335%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (114 samples, 0.22%)</title><rect x="99.7835%" y="100" width="0.2165%" height="15" fill="rgb(226,81,46)" fg:x="52549" fg:w="114"/><text x="100.0335%" y="110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (114 samples, 0.22%)</title><rect x="99.7835%" y="116" width="0.2165%" height="15" fill="rgb(247,70,30)" fg:x="52549" fg:w="114"/><text x="100.0335%" y="126.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (114 samples, 0.22%)</title><rect x="99.7835%" y="132" width="0.2165%" height="15" fill="rgb(212,68,19)" fg:x="52549" fg:w="114"/><text x="100.0335%" y="142.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (114 samples, 0.22%)</title><rect x="99.7835%" y="148" width="0.2165%" height="15" fill="rgb(240,187,13)" fg:x="52549" fg:w="114"/><text x="100.0335%" y="158.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (114 samples, 0.22%)</title><rect x="99.7835%" y="164" width="0.2165%" height="15" fill="rgb(223,113,26)" fg:x="52549" fg:w="114"/><text x="100.0335%" y="174.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (114 samples, 0.22%)</title><rect x="99.7835%" y="180" width="0.2165%" height="15" fill="rgb(206,192,2)" fg:x="52549" fg:w="114"/><text x="100.0335%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (114 samples, 0.22%)</title><rect x="99.7835%" y="196" width="0.2165%" height="15" fill="rgb(241,108,4)" fg:x="52549" fg:w="114"/><text x="100.0335%" y="206.50"></text></g><g><title>&lt;module&gt; (sourmash/__init__.py:50) (83 samples, 0.16%)</title><rect x="99.8424%" y="212" width="0.1576%" height="15" fill="rgb(247,173,49)" fg:x="52580" fg:w="83"/><text x="100.0924%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (83 samples, 0.16%)</title><rect x="99.8424%" y="228" width="0.1576%" height="15" fill="rgb(224,114,35)" fg:x="52580" fg:w="83"/><text x="100.0924%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (83 samples, 0.16%)</title><rect x="99.8424%" y="244" width="0.1576%" height="15" fill="rgb(245,159,27)" fg:x="52580" fg:w="83"/><text x="100.0924%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (83 samples, 0.16%)</title><rect x="99.8424%" y="260" width="0.1576%" height="15" fill="rgb(245,172,44)" fg:x="52580" fg:w="83"/><text x="100.0924%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (83 samples, 0.16%)</title><rect x="99.8424%" y="276" width="0.1576%" height="15" fill="rgb(236,23,11)" fg:x="52580" fg:w="83"/><text x="100.0924%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (83 samples, 0.16%)</title><rect x="99.8424%" y="292" width="0.1576%" height="15" fill="rgb(205,117,38)" fg:x="52580" fg:w="83"/><text x="100.0924%" y="302.50"></text></g><g><title>&lt;module&gt; (sourmash/minhash.py:9) (83 samples, 0.16%)</title><rect x="99.8424%" y="308" width="0.1576%" height="15" fill="rgb(237,72,25)" fg:x="52580" fg:w="83"/><text x="100.0924%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (83 samples, 0.16%)</title><rect x="99.8424%" y="324" width="0.1576%" height="15" fill="rgb(244,70,9)" fg:x="52580" fg:w="83"/><text x="100.0924%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (83 samples, 0.16%)</title><rect x="99.8424%" y="340" width="0.1576%" height="15" fill="rgb(217,125,39)" fg:x="52580" fg:w="83"/><text x="100.0924%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (83 samples, 0.16%)</title><rect x="99.8424%" y="356" width="0.1576%" height="15" fill="rgb(235,36,10)" fg:x="52580" fg:w="83"/><text x="100.0924%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (83 samples, 0.16%)</title><rect x="99.8424%" y="372" width="0.1576%" height="15" fill="rgb(251,123,47)" fg:x="52580" fg:w="83"/><text x="100.0924%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (83 samples, 0.16%)</title><rect x="99.8424%" y="388" width="0.1576%" height="15" fill="rgb(221,13,13)" fg:x="52580" fg:w="83"/><text x="100.0924%" y="398.50"></text></g></svg></svg>