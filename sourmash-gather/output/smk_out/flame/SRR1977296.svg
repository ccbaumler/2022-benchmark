<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="458" onload="init(evt)" viewBox="0 0 1200 458" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="458" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o ../../output/smk_out/flame/SRR1977296.svg -- sourmash gather ../../input/hu/SRR1977296.abundtrim.fq.gz.sig /group/ctbrowngrp/sourmash-db/gtdb-rs207/gtdb-rs207.genomic-reps.dna.k31.zip -o ../../output/smk_out/flame/csv/SRR1977296.csv</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="447.00"> </text><svg id="frames" x="10" width="1180" total_samples="68529"><g><title>load_signatures (sourmash/signature.py:393) (208 samples, 0.30%)</title><rect x="0.0905%" y="244" width="0.3035%" height="15" fill="rgb(227,0,7)" fg:x="62" fg:w="208"/><text x="0.3405%" y="254.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (208 samples, 0.30%)</title><rect x="0.0905%" y="260" width="0.3035%" height="15" fill="rgb(217,0,24)" fg:x="62" fg:w="208"/><text x="0.3405%" y="270.50"></text></g><g><title>load_from_path (sourmash/index/__init__.py:1020) (210 samples, 0.31%)</title><rect x="0.0905%" y="196" width="0.3064%" height="15" fill="rgb(221,193,54)" fg:x="62" fg:w="210"/><text x="0.3405%" y="206.50"></text></g><g><title>load (sourmash/index/__init__.py:408) (210 samples, 0.31%)</title><rect x="0.0905%" y="212" width="0.3064%" height="15" fill="rgb(248,212,6)" fg:x="62" fg:w="210"/><text x="0.3405%" y="222.50"></text></g><g><title>__init__ (sourmash/index/__init__.py:378) (210 samples, 0.31%)</title><rect x="0.0905%" y="228" width="0.3064%" height="15" fill="rgb(208,68,35)" fg:x="62" fg:w="210"/><text x="0.3405%" y="238.50"></text></g><g><title>_load_database (sourmash/sourmash_args.py:453) (266 samples, 0.39%)</title><rect x="0.0336%" y="164" width="0.3882%" height="15" fill="rgb(232,128,0)" fg:x="23" fg:w="266"/><text x="0.2836%" y="174.50"></text></g><g><title>_multiindex_load_from_path (sourmash/sourmash_args.py:383) (227 samples, 0.33%)</title><rect x="0.0905%" y="180" width="0.3312%" height="15" fill="rgb(207,160,47)" fg:x="62" fg:w="227"/><text x="0.3405%" y="190.50"></text></g><g><title>load_query_signature (sourmash/sourmash_args.py:213) (267 samples, 0.39%)</title><rect x="0.0336%" y="132" width="0.3896%" height="15" fill="rgb(228,23,34)" fg:x="23" fg:w="267"/><text x="0.2836%" y="142.50"></text></g><g><title>load_file_as_signatures (sourmash/sourmash_args.py:536) (267 samples, 0.39%)</title><rect x="0.0336%" y="148" width="0.3896%" height="15" fill="rgb(218,30,26)" fg:x="23" fg:w="267"/><text x="0.2836%" y="158.50"></text></g><g><title>gather (sourmash/commands.py:700) (268 samples, 0.39%)</title><rect x="0.0336%" y="116" width="0.3911%" height="15" fill="rgb(220,122,19)" fg:x="23" fg:w="268"/><text x="0.2836%" y="126.50"></text></g><g><title>load_from_csv (sourmash/manifest.py:79) (104 samples, 0.15%)</title><rect x="0.5107%" y="228" width="0.1518%" height="15" fill="rgb(250,228,42)" fg:x="350" fg:w="104"/><text x="0.7607%" y="238.50"></text></g><g><title>load_from_csv (sourmash/manifest.py:83) (148 samples, 0.22%)</title><rect x="0.6858%" y="228" width="0.2160%" height="15" fill="rgb(240,193,28)" fg:x="470" fg:w="148"/><text x="0.9358%" y="238.50"></text></g><g><title>_load_database (sourmash/sourmash_args.py:453) (336 samples, 0.49%)</title><rect x="0.4246%" y="148" width="0.4903%" height="15" fill="rgb(216,20,37)" fg:x="291" fg:w="336"/><text x="0.6746%" y="158.50"></text></g><g><title>_load_zipfile (sourmash/sourmash_args.py:416) (320 samples, 0.47%)</title><rect x="0.4480%" y="164" width="0.4670%" height="15" fill="rgb(206,188,39)" fg:x="307" fg:w="320"/><text x="0.6980%" y="174.50"></text></g><g><title>load (sourmash/index/__init__.py:587) (300 samples, 0.44%)</title><rect x="0.4772%" y="180" width="0.4378%" height="15" fill="rgb(217,207,13)" fg:x="327" fg:w="300"/><text x="0.7272%" y="190.50"></text></g><g><title>__init__ (sourmash/index/__init__.py:520) (300 samples, 0.44%)</title><rect x="0.4772%" y="196" width="0.4378%" height="15" fill="rgb(231,73,38)" fg:x="327" fg:w="300"/><text x="0.7272%" y="206.50"></text></g><g><title>_load_manifest (sourmash/index/__init__.py:542) (279 samples, 0.41%)</title><rect x="0.5078%" y="212" width="0.4071%" height="15" fill="rgb(225,20,46)" fg:x="348" fg:w="279"/><text x="0.7578%" y="222.50"></text></g><g><title>load_dbs_and_sigs (sourmash/sourmash_args.py:308) (337 samples, 0.49%)</title><rect x="0.4246%" y="132" width="0.4918%" height="15" fill="rgb(210,31,41)" fg:x="291" fg:w="337"/><text x="0.6746%" y="142.50"></text></g><g><title>gather (sourmash/commands.py:725) (346 samples, 0.50%)</title><rect x="0.4246%" y="116" width="0.5049%" height="15" fill="rgb(221,200,47)" fg:x="291" fg:w="346"/><text x="0.6746%" y="126.50"></text></g><g><title>signatures (sourmash/index/__init__.py:615) (80 samples, 0.12%)</title><rect x="1.0229%" y="196" width="0.1167%" height="15" fill="rgb(226,26,5)" fg:x="701" fg:w="80"/><text x="1.2729%" y="206.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (621 samples, 0.91%)</title><rect x="1.2943%" y="244" width="0.9062%" height="15" fill="rgb(249,33,26)" fg:x="887" fg:w="621"/><text x="1.5443%" y="254.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (649 samples, 0.95%)</title><rect x="1.2652%" y="228" width="0.9470%" height="15" fill="rgb(235,183,28)" fg:x="867" fg:w="649"/><text x="1.5152%" y="238.50"></text></g><g><title>load (sourmash/sbt_storage.py:158) (691 samples, 1.01%)</title><rect x="1.2476%" y="212" width="1.0083%" height="15" fill="rgb(221,5,38)" fg:x="855" fg:w="691"/><text x="1.4976%" y="222.50"></text></g><g><title>signatures (sourmash/index/__init__.py:616) (862 samples, 1.26%)</title><rect x="1.1397%" y="196" width="1.2579%" height="15" fill="rgb(247,18,42)" fg:x="781" fg:w="862"/><text x="1.3897%" y="206.50"></text></g><g><title>load_signatures (sourmash/signature.py:374) (201 samples, 0.29%)</title><rect x="2.5683%" y="212" width="0.2933%" height="15" fill="rgb(241,131,45)" fg:x="1760" fg:w="201"/><text x="2.8183%" y="222.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (40,056 samples, 58.45%)</title><rect x="2.9345%" y="228" width="58.4512%" height="15" fill="rgb(249,31,29)" fg:x="2011" fg:w="40056"/><text x="3.1845%" y="238.50">rustcall (sourmash/utils.py:68)</text></g><g><title>load_signatures (sourmash/signature.py:406) (40,091 samples, 58.50%)</title><rect x="2.9214%" y="212" width="58.5022%" height="15" fill="rgb(225,111,53)" fg:x="2002" fg:w="40091"/><text x="3.1714%" y="222.50">load_signatures (sourmash/signature.py:406)</text></g><g><title>__init__ (sourmash/signature.py:37) (70 samples, 0.10%)</title><rect x="61.7563%" y="260" width="0.1021%" height="15" fill="rgb(238,160,17)" fg:x="42321" fg:w="70"/><text x="62.0063%" y="270.50"></text></g><g><title>__copy__ (sourmash/signature.py:229) (233 samples, 0.34%)</title><rect x="61.6148%" y="244" width="0.3400%" height="15" fill="rgb(214,148,48)" fg:x="42224" fg:w="233"/><text x="61.8648%" y="254.50"></text></g><g><title>__copy__ (sourmash/signature.py:230) (115 samples, 0.17%)</title><rect x="61.9548%" y="244" width="0.1678%" height="15" fill="rgb(232,36,49)" fg:x="42457" fg:w="115"/><text x="62.2048%" y="254.50"></text></g><g><title>minhash (sourmash/signature.py:47) (86 samples, 0.13%)</title><rect x="61.9971%" y="260" width="0.1255%" height="15" fill="rgb(209,103,24)" fg:x="42486" fg:w="86"/><text x="62.2471%" y="270.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (78 samples, 0.11%)</title><rect x="62.0088%" y="276" width="0.1138%" height="15" fill="rgb(229,88,8)" fg:x="42494" fg:w="78"/><text x="62.2588%" y="286.50"></text></g><g><title>__copy__ (sourmash/signature.py:231) (138 samples, 0.20%)</title><rect x="62.1226%" y="244" width="0.2014%" height="15" fill="rgb(213,181,19)" fg:x="42572" fg:w="138"/><text x="62.3726%" y="254.50"></text></g><g><title>name (sourmash/signature.py:98) (126 samples, 0.18%)</title><rect x="62.1401%" y="260" width="0.1839%" height="15" fill="rgb(254,191,54)" fg:x="42584" fg:w="126"/><text x="62.3901%" y="270.50"></text></g><g><title>to_frozen (sourmash/signature.py:240) (536 samples, 0.78%)</title><rect x="61.6046%" y="228" width="0.7822%" height="15" fill="rgb(241,83,37)" fg:x="42217" fg:w="536"/><text x="61.8546%" y="238.50"></text></g><g><title>signatures (sourmash/index/__init__.py:617) (41,124 samples, 60.01%)</title><rect x="2.3975%" y="196" width="60.0096%" height="15" fill="rgb(233,36,39)" fg:x="1643" fg:w="41124"/><text x="2.6475%" y="206.50">signatures (sourmash/index/__init__.py:617)</text></g><g><title>load_signatures (sourmash/signature.py:424) (564 samples, 0.82%)</title><rect x="61.5841%" y="212" width="0.8230%" height="15" fill="rgb(226,3,54)" fg:x="42203" fg:w="564"/><text x="61.8341%" y="222.50"></text></g><g><title>__contains__ (sourmash/manifest.py:337) (126 samples, 0.18%)</title><rect x="62.4305%" y="212" width="0.1839%" height="15" fill="rgb(245,192,40)" fg:x="42783" fg:w="126"/><text x="62.6805%" y="222.50"></text></g><g><title>md5sum (sourmash/signature.py:83) (120 samples, 0.18%)</title><rect x="62.4393%" y="228" width="0.1751%" height="15" fill="rgb(238,167,29)" fg:x="42789" fg:w="120"/><text x="62.6893%" y="238.50"></text></g><g><title>signatures (sourmash/index/__init__.py:620) (179 samples, 0.26%)</title><rect x="62.4072%" y="196" width="0.2612%" height="15" fill="rgb(232,182,51)" fg:x="42767" fg:w="179"/><text x="62.6572%" y="206.50"></text></g><g><title>signatures_with_location (sourmash/index/__init__.py:79) (42,257 samples, 61.66%)</title><rect x="1.0171%" y="180" width="61.6629%" height="15" fill="rgb(231,60,39)" fg:x="697" fg:w="42257"/><text x="1.2671%" y="190.50">signatures_with_location (sourmash/index/__init__.py:79)</text></g><g><title>find (sourmash/index/__init__.py:146) (42,380 samples, 61.84%)</title><rect x="0.9602%" y="164" width="61.8424%" height="15" fill="rgb(208,69,12)" fg:x="658" fg:w="42380"/><text x="1.2102%" y="174.50">find (sourmash/index/__init__.py:146)</text></g><g><title>signatures_with_location (sourmash/index/__init__.py:80) (84 samples, 0.12%)</title><rect x="62.6800%" y="180" width="0.1226%" height="15" fill="rgb(235,93,37)" fg:x="42954" fg:w="84"/><text x="62.9300%" y="190.50"></text></g><g><title>location (sourmash/index/__init__.py:569) (69 samples, 0.10%)</title><rect x="62.7019%" y="196" width="0.1007%" height="15" fill="rgb(213,116,39)" fg:x="42969" fg:w="69"/><text x="62.9519%" y="206.50"></text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:108) (172 samples, 0.25%)</title><rect x="62.9544%" y="196" width="0.2510%" height="15" fill="rgb(222,207,29)" fg:x="43142" fg:w="172"/><text x="63.2044%" y="206.50"></text></g><g><title>scaled (sourmash/minhash.py:526) (143 samples, 0.21%)</title><rect x="62.9967%" y="212" width="0.2087%" height="15" fill="rgb(206,96,30)" fg:x="43171" fg:w="143"/><text x="63.2467%" y="222.50"></text></g><g><title>_get_scaled_for_max_hash (sourmash/minhash.py:66) (134 samples, 0.20%)</title><rect x="63.0098%" y="228" width="0.1955%" height="15" fill="rgb(218,138,4)" fg:x="43180" fg:w="134"/><text x="63.2598%" y="238.50"></text></g><g><title>flatten (sourmash/minhash.py:678) (112 samples, 0.16%)</title><rect x="63.3309%" y="228" width="0.1634%" height="15" fill="rgb(250,191,14)" fg:x="43400" fg:w="112"/><text x="63.5809%" y="238.50"></text></g><g><title>flatten (sourmash/minhash.py:679) (108 samples, 0.16%)</title><rect x="63.4943%" y="228" width="0.1576%" height="15" fill="rgb(239,60,40)" fg:x="43512" fg:w="108"/><text x="63.7443%" y="238.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (677 samples, 0.99%)</title><rect x="63.8197%" y="276" width="0.9879%" height="15" fill="rgb(206,27,48)" fg:x="43735" fg:w="677"/><text x="64.0697%" y="286.50"></text></g><g><title>add_many (sourmash/minhash.py:452) (699 samples, 1.02%)</title><rect x="63.7993%" y="244" width="1.0200%" height="15" fill="rgb(225,35,8)" fg:x="43721" fg:w="699"/><text x="64.0493%" y="254.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (698 samples, 1.02%)</title><rect x="63.8007%" y="260" width="1.0185%" height="15" fill="rgb(250,213,24)" fg:x="43722" fg:w="698"/><text x="64.0507%" y="270.50"></text></g><g><title>flatten (sourmash/minhash.py:1099) (1,044 samples, 1.52%)</title><rect x="63.2973%" y="212" width="1.5234%" height="15" fill="rgb(247,123,22)" fg:x="43377" fg:w="1044"/><text x="63.5473%" y="222.50"></text></g><g><title>flatten (sourmash/minhash.py:683) (713 samples, 1.04%)</title><rect x="63.7803%" y="228" width="1.0404%" height="15" fill="rgb(231,138,38)" fg:x="43708" fg:w="713"/><text x="64.0303%" y="238.50"></text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:111) (1,092 samples, 1.59%)</title><rect x="63.2521%" y="196" width="1.5935%" height="15" fill="rgb(231,145,46)" fg:x="43346" fg:w="1092"/><text x="63.5021%" y="206.50"></text></g><g><title>find (sourmash/index/__init__.py:147) (1,442 samples, 2.10%)</title><rect x="62.8026%" y="164" width="2.1042%" height="15" fill="rgb(251,118,11)" fg:x="43038" fg:w="1442"/><text x="63.0526%" y="174.50">f..</text></g><g><title>prepare_subject (sourmash/index/__init__.py:131) (1,342 samples, 1.96%)</title><rect x="62.9485%" y="180" width="1.9583%" height="15" fill="rgb(217,147,25)" fg:x="43138" fg:w="1342"/><text x="63.1985%" y="190.50">p..</text></g><g><title>rustcall (sourmash/utils.py:68) (7,597 samples, 11.09%)</title><rect x="65.1374%" y="212" width="11.0858%" height="15" fill="rgb(247,81,37)" fg:x="44638" fg:w="7597"/><text x="65.3874%" y="222.50">rustcall (sourma..</text></g><g><title>minhash (sourmash/signature.py:47) (7,681 samples, 11.21%)</title><rect x="65.0922%" y="180" width="11.2084%" height="15" fill="rgb(209,12,38)" fg:x="44607" fg:w="7681"/><text x="65.3422%" y="190.50">minhash (sourmas..</text></g><g><title>_methodcall (sourmash/utils.py:25) (7,665 samples, 11.19%)</title><rect x="65.1155%" y="196" width="11.1850%" height="15" fill="rgb(227,1,9)" fg:x="44623" fg:w="7665"/><text x="65.3655%" y="206.50">_methodcall (sou..</text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:108) (70 samples, 0.10%)</title><rect x="76.3268%" y="196" width="0.1021%" height="15" fill="rgb(248,47,43)" fg:x="52306" fg:w="70"/><text x="76.5768%" y="206.50"></text></g><g><title>find (sourmash/index/__init__.py:149) (8,229 samples, 12.01%)</title><rect x="64.9068%" y="164" width="12.0081%" height="15" fill="rgb(221,10,30)" fg:x="44480" fg:w="8229"/><text x="65.1568%" y="174.50">find (sourmash/ind..</text></g><g><title>prepare_query (sourmash/index/__init__.py:134) (421 samples, 0.61%)</title><rect x="76.3005%" y="180" width="0.6143%" height="15" fill="rgb(210,229,1)" fg:x="52288" fg:w="421"/><text x="76.5505%" y="190.50"></text></g><g><title>scaled (sourmash/minhash.py:526) (139 samples, 0.20%)</title><rect x="76.7120%" y="196" width="0.2028%" height="15" fill="rgb(222,148,37)" fg:x="52570" fg:w="139"/><text x="76.9620%" y="206.50"></text></g><g><title>_get_scaled_for_max_hash (sourmash/minhash.py:66) (115 samples, 0.17%)</title><rect x="76.7471%" y="212" width="0.1678%" height="15" fill="rgb(234,67,33)" fg:x="52594" fg:w="115"/><text x="76.9971%" y="222.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (13,960 samples, 20.37%)</title><rect x="77.1469%" y="212" width="20.3709%" height="15" fill="rgb(247,98,35)" fg:x="52868" fg:w="13960"/><text x="77.3969%" y="222.50">rustcall (sourmash/utils.py:68)</text></g><g><title>intersection_and_union_size (sourmash/minhash.py:617) (14,008 samples, 20.44%)</title><rect x="77.1090%" y="180" width="20.4410%" height="15" fill="rgb(247,138,52)" fg:x="52842" fg:w="14008"/><text x="77.3590%" y="190.50">intersection_and_union_size (sou..</text></g><g><title>_methodcall (sourmash/utils.py:25) (13,993 samples, 20.42%)</title><rect x="77.1308%" y="196" width="20.4191%" height="15" fill="rgb(213,79,30)" fg:x="52857" fg:w="13993"/><text x="77.3808%" y="206.50">_methodcall (sourmash/utils.py:2..</text></g><g><title>find (sourmash/index/__init__.py:154) (14,148 samples, 20.65%)</title><rect x="76.9630%" y="164" width="20.6453%" height="15" fill="rgb(246,177,23)" fg:x="52742" fg:w="14148"/><text x="77.2130%" y="174.50">find (sourmash/index/__init__.py..</text></g><g><title>find (sourmash/index/__init__.py:156) (90 samples, 0.13%)</title><rect x="97.6083%" y="164" width="0.1313%" height="15" fill="rgb(230,62,27)" fg:x="66890" fg:w="90"/><text x="97.8583%" y="174.50"></text></g><g><title>counter_gather (sourmash/index/__init__.py:303) (66,382 samples, 96.87%)</title><rect x="0.9587%" y="132" width="96.8670%" height="15" fill="rgb(216,154,8)" fg:x="657" fg:w="66382"/><text x="1.2087%" y="142.50">counter_gather (sourmash/index/__init__.py:303)</text></g><g><title>prefetch (sourmash/index/__init__.py:240) (66,381 samples, 96.87%)</title><rect x="0.9602%" y="148" width="96.8656%" height="15" fill="rgb(244,35,45)" fg:x="658" fg:w="66381"/><text x="1.2102%" y="158.50">prefetch (sourmash/index/__init__.py:240)</text></g><g><title>add (sourmash/index/__init__.py:728) (93 samples, 0.14%)</title><rect x="97.8257%" y="148" width="0.1357%" height="15" fill="rgb(251,115,12)" fg:x="67039" fg:w="93"/><text x="98.0757%" y="158.50"></text></g><g><title>count_common (sourmash/minhash.py:607) (93 samples, 0.14%)</title><rect x="97.8257%" y="164" width="0.1357%" height="15" fill="rgb(240,54,50)" fg:x="67039" fg:w="93"/><text x="98.0757%" y="174.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (93 samples, 0.14%)</title><rect x="97.8257%" y="180" width="0.1357%" height="15" fill="rgb(233,84,52)" fg:x="67039" fg:w="93"/><text x="98.0757%" y="190.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (92 samples, 0.13%)</title><rect x="97.8272%" y="196" width="0.1342%" height="15" fill="rgb(207,117,47)" fg:x="67040" fg:w="92"/><text x="98.0772%" y="206.50"></text></g><g><title>gather (sourmash/commands.py:760) (66,483 samples, 97.01%)</title><rect x="0.9587%" y="116" width="97.0144%" height="15" fill="rgb(249,43,39)" fg:x="657" fg:w="66483"/><text x="1.2087%" y="126.50">gather (sourmash/commands.py:760)</text></g><g><title>counter_gather (sourmash/index/__init__.py:304) (101 samples, 0.15%)</title><rect x="97.8257%" y="132" width="0.1474%" height="15" fill="rgb(209,38,44)" fg:x="67039" fg:w="101"/><text x="98.0757%" y="142.50"></text></g><g><title>flatten_and_intersect_scaled (sourmash/minhash.py:136) (165 samples, 0.24%)</title><rect x="97.9994%" y="148" width="0.2408%" height="15" fill="rgb(236,212,23)" fg:x="67158" fg:w="165"/><text x="98.2494%" y="158.50"></text></g><g><title>intersection (sourmash/minhash.py:930) (165 samples, 0.24%)</title><rect x="97.9994%" y="164" width="0.2408%" height="15" fill="rgb(242,79,21)" fg:x="67158" fg:w="165"/><text x="98.2494%" y="174.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (165 samples, 0.24%)</title><rect x="97.9994%" y="180" width="0.2408%" height="15" fill="rgb(211,96,35)" fg:x="67158" fg:w="165"/><text x="98.2494%" y="190.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (165 samples, 0.24%)</title><rect x="97.9994%" y="196" width="0.2408%" height="15" fill="rgb(253,215,40)" fg:x="67158" fg:w="165"/><text x="98.2494%" y="206.50"></text></g><g><title>union_found (sourmash/index/__init__.py:766) (187 samples, 0.27%)</title><rect x="97.9731%" y="132" width="0.2729%" height="15" fill="rgb(211,81,21)" fg:x="67140" fg:w="187"/><text x="98.2231%" y="142.50"></text></g><g><title>gather (sourmash/commands.py:769) (194 samples, 0.28%)</title><rect x="97.9731%" y="116" width="0.2831%" height="15" fill="rgb(208,190,38)" fg:x="67140" fg:w="194"/><text x="98.2231%" y="126.50"></text></g><g><title>gather (sourmash/commands.py:771) (495 samples, 0.72%)</title><rect x="98.2562%" y="116" width="0.7223%" height="15" fill="rgb(235,213,38)" fg:x="67334" fg:w="495"/><text x="98.5062%" y="126.50"></text></g><g><title>remove_many (sourmash/minhash.py:463) (495 samples, 0.72%)</title><rect x="98.2562%" y="132" width="0.7223%" height="15" fill="rgb(237,122,38)" fg:x="67334" fg:w="495"/><text x="98.5062%" y="142.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (495 samples, 0.72%)</title><rect x="98.2562%" y="148" width="0.7223%" height="15" fill="rgb(244,218,35)" fg:x="67334" fg:w="495"/><text x="98.5062%" y="158.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (495 samples, 0.72%)</title><rect x="98.2562%" y="164" width="0.7223%" height="15" fill="rgb(240,68,47)" fg:x="67334" fg:w="495"/><text x="98.5062%" y="174.50"></text></g><g><title>gather (sourmash/commands.py:807) (94 samples, 0.14%)</title><rect x="98.9785%" y="116" width="0.1372%" height="15" fill="rgb(210,16,53)" fg:x="67829" fg:w="94"/><text x="99.2285%" y="126.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (73 samples, 0.11%)</title><rect x="99.1828%" y="212" width="0.1065%" height="15" fill="rgb(235,124,12)" fg:x="67969" fg:w="73"/><text x="99.4328%" y="222.50"></text></g><g><title>consume (sourmash/index/__init__.py:851) (103 samples, 0.15%)</title><rect x="99.1434%" y="164" width="0.1503%" height="15" fill="rgb(224,169,11)" fg:x="67942" fg:w="103"/><text x="99.3934%" y="174.50"></text></g><g><title>minhash (sourmash/signature.py:47) (86 samples, 0.13%)</title><rect x="99.1682%" y="180" width="0.1255%" height="15" fill="rgb(250,166,2)" fg:x="67959" fg:w="86"/><text x="99.4182%" y="190.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (80 samples, 0.12%)</title><rect x="99.1770%" y="196" width="0.1167%" height="15" fill="rgb(242,216,29)" fg:x="67965" fg:w="80"/><text x="99.4270%" y="206.50"></text></g><g><title>__next__ (sourmash/search.py:754) (174 samples, 0.25%)</title><rect x="99.1186%" y="132" width="0.2539%" height="15" fill="rgb(230,116,27)" fg:x="67925" fg:w="174"/><text x="99.3686%" y="142.50"></text></g><g><title>_find_best (sourmash/search.py:651) (158 samples, 0.23%)</title><rect x="99.1420%" y="148" width="0.2306%" height="15" fill="rgb(228,99,48)" fg:x="67941" fg:w="158"/><text x="99.3920%" y="158.50"></text></g><g><title>__post_init__ (sourmash/search.py:514) (85 samples, 0.12%)</title><rect x="99.4980%" y="164" width="0.1240%" height="15" fill="rgb(253,11,6)" fg:x="68185" fg:w="85"/><text x="99.7480%" y="174.50"></text></g><g><title>gather (sourmash/commands.py:815) (391 samples, 0.57%)</title><rect x="99.1157%" y="116" width="0.5706%" height="15" fill="rgb(247,143,39)" fg:x="67923" fg:w="391"/><text x="99.3657%" y="126.50"></text></g><g><title>__next__ (sourmash/search.py:794) (130 samples, 0.19%)</title><rect x="99.4966%" y="132" width="0.1897%" height="15" fill="rgb(236,97,10)" fg:x="68184" fg:w="130"/><text x="99.7466%" y="142.50"></text></g><g><title>__init__ (&lt;string&gt;:19) (129 samples, 0.19%)</title><rect x="99.4980%" y="148" width="0.1882%" height="15" fill="rgb(233,208,19)" fg:x="68185" fg:w="129"/><text x="99.7480%" y="158.50"></text></g><g><title>main (sourmash/__main__.py:13) (68,316 samples, 99.69%)</title><rect x="0.0000%" y="84" width="99.6892%" height="15" fill="rgb(216,164,2)" fg:x="0" fg:w="68316"/><text x="0.2500%" y="94.50">main (sourmash/__main__.py:13)</text></g><g><title>main (sourmash/cli/gather.py:158) (68,316 samples, 99.69%)</title><rect x="0.0000%" y="100" width="99.6892%" height="15" fill="rgb(220,129,5)" fg:x="0" fg:w="68316"/><text x="0.2500%" y="110.50">main (sourmash/cli/gather.py:158)</text></g><g><title>&lt;module&gt; (sourmash:11) (68,331 samples, 99.71%)</title><rect x="0.0000%" y="68" width="99.7111%" height="15" fill="rgb(242,17,10)" fg:x="0" fg:w="68331"/><text x="0.2500%" y="78.50">&lt;module&gt; (sourmash:11)</text></g><g><title>&lt;module&gt; (sourmash/distance_utils.py:7) (76 samples, 0.11%)</title><rect x="99.7972%" y="404" width="0.1109%" height="15" fill="rgb(242,107,0)" fg:x="68390" fg:w="76"/><text x="100.0472%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (76 samples, 0.11%)</title><rect x="99.7972%" y="420" width="0.1109%" height="15" fill="rgb(251,28,31)" fg:x="68390" fg:w="76"/><text x="100.0472%" y="430.50"></text></g><g><title>&lt;module&gt; (sourmash/__init__.py:50) (138 samples, 0.20%)</title><rect x="99.7957%" y="212" width="0.2014%" height="15" fill="rgb(233,223,10)" fg:x="68389" fg:w="138"/><text x="100.0457%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (138 samples, 0.20%)</title><rect x="99.7957%" y="228" width="0.2014%" height="15" fill="rgb(215,21,27)" fg:x="68389" fg:w="138"/><text x="100.0457%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (138 samples, 0.20%)</title><rect x="99.7957%" y="244" width="0.2014%" height="15" fill="rgb(232,23,21)" fg:x="68389" fg:w="138"/><text x="100.0457%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (138 samples, 0.20%)</title><rect x="99.7957%" y="260" width="0.2014%" height="15" fill="rgb(244,5,23)" fg:x="68389" fg:w="138"/><text x="100.0457%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (138 samples, 0.20%)</title><rect x="99.7957%" y="276" width="0.2014%" height="15" fill="rgb(226,81,46)" fg:x="68389" fg:w="138"/><text x="100.0457%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (138 samples, 0.20%)</title><rect x="99.7957%" y="292" width="0.2014%" height="15" fill="rgb(247,70,30)" fg:x="68389" fg:w="138"/><text x="100.0457%" y="302.50"></text></g><g><title>&lt;module&gt; (sourmash/minhash.py:9) (138 samples, 0.20%)</title><rect x="99.7957%" y="308" width="0.2014%" height="15" fill="rgb(212,68,19)" fg:x="68389" fg:w="138"/><text x="100.0457%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (138 samples, 0.20%)</title><rect x="99.7957%" y="324" width="0.2014%" height="15" fill="rgb(240,187,13)" fg:x="68389" fg:w="138"/><text x="100.0457%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (138 samples, 0.20%)</title><rect x="99.7957%" y="340" width="0.2014%" height="15" fill="rgb(223,113,26)" fg:x="68389" fg:w="138"/><text x="100.0457%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (138 samples, 0.20%)</title><rect x="99.7957%" y="356" width="0.2014%" height="15" fill="rgb(206,192,2)" fg:x="68389" fg:w="138"/><text x="100.0457%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (138 samples, 0.20%)</title><rect x="99.7957%" y="372" width="0.2014%" height="15" fill="rgb(241,108,4)" fg:x="68389" fg:w="138"/><text x="100.0457%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (138 samples, 0.20%)</title><rect x="99.7957%" y="388" width="0.2014%" height="15" fill="rgb(247,173,49)" fg:x="68389" fg:w="138"/><text x="100.0457%" y="398.50"></text></g><g><title>all (68,529 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(224,114,35)" fg:x="0" fg:w="68529"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (sourmash:7) (198 samples, 0.29%)</title><rect x="99.7111%" y="68" width="0.2889%" height="15" fill="rgb(245,159,27)" fg:x="68331" fg:w="198"/><text x="99.9611%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (198 samples, 0.29%)</title><rect x="99.7111%" y="84" width="0.2889%" height="15" fill="rgb(245,172,44)" fg:x="68331" fg:w="198"/><text x="99.9611%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (198 samples, 0.29%)</title><rect x="99.7111%" y="100" width="0.2889%" height="15" fill="rgb(236,23,11)" fg:x="68331" fg:w="198"/><text x="99.9611%" y="110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (198 samples, 0.29%)</title><rect x="99.7111%" y="116" width="0.2889%" height="15" fill="rgb(205,117,38)" fg:x="68331" fg:w="198"/><text x="99.9611%" y="126.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (198 samples, 0.29%)</title><rect x="99.7111%" y="132" width="0.2889%" height="15" fill="rgb(237,72,25)" fg:x="68331" fg:w="198"/><text x="99.9611%" y="142.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (198 samples, 0.29%)</title><rect x="99.7111%" y="148" width="0.2889%" height="15" fill="rgb(244,70,9)" fg:x="68331" fg:w="198"/><text x="99.9611%" y="158.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (198 samples, 0.29%)</title><rect x="99.7111%" y="164" width="0.2889%" height="15" fill="rgb(217,125,39)" fg:x="68331" fg:w="198"/><text x="99.9611%" y="174.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (198 samples, 0.29%)</title><rect x="99.7111%" y="180" width="0.2889%" height="15" fill="rgb(235,36,10)" fg:x="68331" fg:w="198"/><text x="99.9611%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (198 samples, 0.29%)</title><rect x="99.7111%" y="196" width="0.2889%" height="15" fill="rgb(251,123,47)" fg:x="68331" fg:w="198"/><text x="99.9611%" y="206.50"></text></g></svg></svg>