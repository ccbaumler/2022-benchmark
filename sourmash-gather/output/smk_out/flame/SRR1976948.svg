<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="426" onload="init(evt)" viewBox="0 0 1200 426" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="426" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o ../../output/smk_out/flame/SRR1976948.svg -- sourmash gather ../../input/hu/SRR1976948.abundtrim.fq.gz.sig /group/ctbrowngrp/sourmash-db/gtdb-rs207/gtdb-rs207.genomic-reps.dna.k31.zip -o ../../output/smk_out/flame/csv/SRR1976948.csv</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="415.00"> </text><svg id="frames" x="10" width="1180" total_samples="98906"><g><title>load_signatures (sourmash/signature.py:393) (173 samples, 0.17%)</title><rect x="0.0445%" y="244" width="0.1749%" height="15" fill="rgb(227,0,7)" fg:x="44" fg:w="173"/><text x="0.2945%" y="254.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (173 samples, 0.17%)</title><rect x="0.0445%" y="260" width="0.1749%" height="15" fill="rgb(217,0,24)" fg:x="44" fg:w="173"/><text x="0.2945%" y="270.50"></text></g><g><title>load_from_path (sourmash/index/__init__.py:1020) (174 samples, 0.18%)</title><rect x="0.0445%" y="196" width="0.1759%" height="15" fill="rgb(221,193,54)" fg:x="44" fg:w="174"/><text x="0.2945%" y="206.50"></text></g><g><title>load (sourmash/index/__init__.py:408) (174 samples, 0.18%)</title><rect x="0.0445%" y="212" width="0.1759%" height="15" fill="rgb(248,212,6)" fg:x="44" fg:w="174"/><text x="0.2945%" y="222.50"></text></g><g><title>__init__ (sourmash/index/__init__.py:378) (174 samples, 0.18%)</title><rect x="0.0445%" y="228" width="0.1759%" height="15" fill="rgb(208,68,35)" fg:x="44" fg:w="174"/><text x="0.2945%" y="238.50"></text></g><g><title>load_query_signature (sourmash/sourmash_args.py:213) (222 samples, 0.22%)</title><rect x="0.0111%" y="132" width="0.2245%" height="15" fill="rgb(232,128,0)" fg:x="11" fg:w="222"/><text x="0.2611%" y="142.50"></text></g><g><title>load_file_as_signatures (sourmash/sourmash_args.py:536) (222 samples, 0.22%)</title><rect x="0.0111%" y="148" width="0.2245%" height="15" fill="rgb(207,160,47)" fg:x="11" fg:w="222"/><text x="0.2611%" y="158.50"></text></g><g><title>_load_database (sourmash/sourmash_args.py:453) (222 samples, 0.22%)</title><rect x="0.0111%" y="164" width="0.2245%" height="15" fill="rgb(228,23,34)" fg:x="11" fg:w="222"/><text x="0.2611%" y="174.50"></text></g><g><title>_multiindex_load_from_path (sourmash/sourmash_args.py:383) (189 samples, 0.19%)</title><rect x="0.0445%" y="180" width="0.1911%" height="15" fill="rgb(218,30,26)" fg:x="44" fg:w="189"/><text x="0.2945%" y="190.50"></text></g><g><title>gather (sourmash/commands.py:700) (225 samples, 0.23%)</title><rect x="0.0111%" y="116" width="0.2275%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="225"/><text x="0.2611%" y="126.50"></text></g><g><title>load_from_csv (sourmash/manifest.py:79) (103 samples, 0.10%)</title><rect x="0.3529%" y="228" width="0.1041%" height="15" fill="rgb(250,228,42)" fg:x="349" fg:w="103"/><text x="0.6029%" y="238.50"></text></g><g><title>load_from_csv (sourmash/manifest.py:83) (123 samples, 0.12%)</title><rect x="0.4772%" y="228" width="0.1244%" height="15" fill="rgb(240,193,28)" fg:x="472" fg:w="123"/><text x="0.7272%" y="238.50"></text></g><g><title>load_dbs_and_sigs (sourmash/sourmash_args.py:308) (366 samples, 0.37%)</title><rect x="0.2396%" y="132" width="0.3700%" height="15" fill="rgb(216,20,37)" fg:x="237" fg:w="366"/><text x="0.4896%" y="142.50"></text></g><g><title>_load_database (sourmash/sourmash_args.py:453) (366 samples, 0.37%)</title><rect x="0.2396%" y="148" width="0.3700%" height="15" fill="rgb(206,188,39)" fg:x="237" fg:w="366"/><text x="0.4896%" y="158.50"></text></g><g><title>_load_zipfile (sourmash/sourmash_args.py:416) (286 samples, 0.29%)</title><rect x="0.3205%" y="164" width="0.2892%" height="15" fill="rgb(217,207,13)" fg:x="317" fg:w="286"/><text x="0.5705%" y="174.50"></text></g><g><title>load (sourmash/index/__init__.py:587) (269 samples, 0.27%)</title><rect x="0.3377%" y="180" width="0.2720%" height="15" fill="rgb(231,73,38)" fg:x="334" fg:w="269"/><text x="0.5877%" y="190.50"></text></g><g><title>__init__ (sourmash/index/__init__.py:520) (269 samples, 0.27%)</title><rect x="0.3377%" y="196" width="0.2720%" height="15" fill="rgb(225,20,46)" fg:x="334" fg:w="269"/><text x="0.5877%" y="206.50"></text></g><g><title>_load_manifest (sourmash/index/__init__.py:542) (254 samples, 0.26%)</title><rect x="0.3529%" y="212" width="0.2568%" height="15" fill="rgb(210,31,41)" fg:x="349" fg:w="254"/><text x="0.6029%" y="222.50"></text></g><g><title>gather (sourmash/commands.py:725) (386 samples, 0.39%)</title><rect x="0.2396%" y="116" width="0.3903%" height="15" fill="rgb(221,200,47)" fg:x="237" fg:w="386"/><text x="0.4896%" y="126.50"></text></g><g><title>signatures (sourmash/index/__init__.py:615) (105 samples, 0.11%)</title><rect x="0.7512%" y="196" width="0.1062%" height="15" fill="rgb(226,26,5)" fg:x="743" fg:w="105"/><text x="1.0012%" y="206.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (682 samples, 0.69%)</title><rect x="1.0788%" y="244" width="0.6895%" height="15" fill="rgb(249,33,26)" fg:x="1067" fg:w="682"/><text x="1.3288%" y="254.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (725 samples, 0.73%)</title><rect x="1.0535%" y="228" width="0.7330%" height="15" fill="rgb(235,183,28)" fg:x="1042" fg:w="725"/><text x="1.3035%" y="238.50"></text></g><g><title>load (sourmash/sbt_storage.py:158) (795 samples, 0.80%)</title><rect x="1.0373%" y="212" width="0.8038%" height="15" fill="rgb(221,5,38)" fg:x="1026" fg:w="795"/><text x="1.2873%" y="222.50"></text></g><g><title>signatures (sourmash/index/__init__.py:616) (1,147 samples, 1.16%)</title><rect x="0.8574%" y="196" width="1.1597%" height="15" fill="rgb(247,18,42)" fg:x="848" fg:w="1147"/><text x="1.1074%" y="206.50"></text></g><g><title>load (sourmash/sbt_storage.py:165) (115 samples, 0.12%)</title><rect x="1.9008%" y="212" width="0.1163%" height="15" fill="rgb(241,131,45)" fg:x="1880" fg:w="115"/><text x="2.1508%" y="222.50"></text></g><g><title>load_signatures (sourmash/signature.py:374) (211 samples, 0.21%)</title><rect x="2.2223%" y="212" width="0.2133%" height="15" fill="rgb(249,31,29)" fg:x="2198" fg:w="211"/><text x="2.4723%" y="222.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (42,907 samples, 43.38%)</title><rect x="2.5115%" y="228" width="43.3816%" height="15" fill="rgb(225,111,53)" fg:x="2484" fg:w="42907"/><text x="2.7615%" y="238.50">rustcall (sourmash/utils.py:68)</text></g><g><title>load_signatures (sourmash/signature.py:406) (43,000 samples, 43.48%)</title><rect x="2.4791%" y="212" width="43.4756%" height="15" fill="rgb(238,160,17)" fg:x="2452" fg:w="43000"/><text x="2.7291%" y="222.50">load_signatures (sourmash/signature.py:406)</text></g><g><title>__copy__ (sourmash/signature.py:229) (306 samples, 0.31%)</title><rect x="46.1489%" y="244" width="0.3094%" height="15" fill="rgb(214,148,48)" fg:x="45644" fg:w="306"/><text x="46.3989%" y="254.50"></text></g><g><title>__copy__ (sourmash/signature.py:230) (155 samples, 0.16%)</title><rect x="46.4583%" y="244" width="0.1567%" height="15" fill="rgb(232,36,49)" fg:x="45950" fg:w="155"/><text x="46.7083%" y="254.50"></text></g><g><title>minhash (sourmash/signature.py:47) (114 samples, 0.12%)</title><rect x="46.4997%" y="260" width="0.1153%" height="15" fill="rgb(209,103,24)" fg:x="45991" fg:w="114"/><text x="46.7497%" y="270.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (104 samples, 0.11%)</title><rect x="46.5098%" y="276" width="0.1052%" height="15" fill="rgb(229,88,8)" fg:x="46001" fg:w="104"/><text x="46.7598%" y="286.50"></text></g><g><title>__copy__ (sourmash/signature.py:231) (195 samples, 0.20%)</title><rect x="46.6150%" y="244" width="0.1972%" height="15" fill="rgb(213,181,19)" fg:x="46105" fg:w="195"/><text x="46.8650%" y="254.50"></text></g><g><title>name (sourmash/signature.py:98) (177 samples, 0.18%)</title><rect x="46.6332%" y="260" width="0.1790%" height="15" fill="rgb(254,191,54)" fg:x="46123" fg:w="177"/><text x="46.8832%" y="270.50"></text></g><g><title>to_frozen (sourmash/signature.py:240) (734 samples, 0.74%)</title><rect x="46.1347%" y="228" width="0.7421%" height="15" fill="rgb(241,83,37)" fg:x="45630" fg:w="734"/><text x="46.3847%" y="238.50"></text></g><g><title>load_signatures (sourmash/signature.py:424) (772 samples, 0.78%)</title><rect x="46.1145%" y="212" width="0.7805%" height="15" fill="rgb(233,36,39)" fg:x="45610" fg:w="772"/><text x="46.3645%" y="222.50"></text></g><g><title>signatures (sourmash/index/__init__.py:617) (44,390 samples, 44.88%)</title><rect x="2.0171%" y="196" width="44.8810%" height="15" fill="rgb(226,3,54)" fg:x="1995" fg:w="44390"/><text x="2.2671%" y="206.50">signatures (sourmash/index/__init__.py:617)</text></g><g><title>__contains__ (sourmash/manifest.py:337) (158 samples, 0.16%)</title><rect x="46.9274%" y="212" width="0.1597%" height="15" fill="rgb(245,192,40)" fg:x="46414" fg:w="158"/><text x="47.1774%" y="222.50"></text></g><g><title>md5sum (sourmash/signature.py:83) (150 samples, 0.15%)</title><rect x="46.9355%" y="228" width="0.1517%" height="15" fill="rgb(238,167,29)" fg:x="46422" fg:w="150"/><text x="47.1855%" y="238.50"></text></g><g><title>signatures (sourmash/index/__init__.py:620) (238 samples, 0.24%)</title><rect x="46.8981%" y="196" width="0.2406%" height="15" fill="rgb(232,182,51)" fg:x="46385" fg:w="238"/><text x="47.1481%" y="206.50"></text></g><g><title>signatures_with_location (sourmash/index/__init__.py:79) (45,894 samples, 46.40%)</title><rect x="0.7482%" y="180" width="46.4016%" height="15" fill="rgb(231,60,39)" fg:x="740" fg:w="45894"/><text x="0.9982%" y="190.50">signatures_with_location (sourmash/index/__init__.py:79)</text></g><g><title>find (sourmash/index/__init__.py:146) (46,120 samples, 46.63%)</title><rect x="0.6804%" y="164" width="46.6301%" height="15" fill="rgb(208,69,12)" fg:x="673" fg:w="46120"/><text x="0.9304%" y="174.50">find (sourmash/index/__init__.py:146)</text></g><g><title>signatures_with_location (sourmash/index/__init__.py:80) (159 samples, 0.16%)</title><rect x="47.1498%" y="180" width="0.1608%" height="15" fill="rgb(235,93,37)" fg:x="46634" fg:w="159"/><text x="47.3998%" y="190.50"></text></g><g><title>location (sourmash/index/__init__.py:569) (130 samples, 0.13%)</title><rect x="47.1791%" y="196" width="0.1314%" height="15" fill="rgb(213,116,39)" fg:x="46663" fg:w="130"/><text x="47.4291%" y="206.50"></text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:108) (169 samples, 0.17%)</title><rect x="47.4511%" y="196" width="0.1709%" height="15" fill="rgb(222,207,29)" fg:x="46932" fg:w="169"/><text x="47.7011%" y="206.50"></text></g><g><title>scaled (sourmash/minhash.py:526) (116 samples, 0.12%)</title><rect x="47.5047%" y="212" width="0.1173%" height="15" fill="rgb(206,96,30)" fg:x="46985" fg:w="116"/><text x="47.7547%" y="222.50"></text></g><g><title>flatten (sourmash/minhash.py:678) (183 samples, 0.19%)</title><rect x="47.7383%" y="228" width="0.1850%" height="15" fill="rgb(218,138,4)" fg:x="47216" fg:w="183"/><text x="47.9883%" y="238.50"></text></g><g><title>flatten (sourmash/minhash.py:679) (121 samples, 0.12%)</title><rect x="47.9233%" y="228" width="0.1223%" height="15" fill="rgb(250,191,14)" fg:x="47399" fg:w="121"/><text x="48.1733%" y="238.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (774 samples, 0.78%)</title><rect x="48.1993%" y="276" width="0.7826%" height="15" fill="rgb(239,60,40)" fg:x="47672" fg:w="774"/><text x="48.4493%" y="286.50"></text></g><g><title>add_many (sourmash/minhash.py:452) (809 samples, 0.82%)</title><rect x="48.1740%" y="244" width="0.8179%" height="15" fill="rgb(206,27,48)" fg:x="47647" fg:w="809"/><text x="48.4240%" y="254.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (798 samples, 0.81%)</title><rect x="48.1851%" y="260" width="0.8068%" height="15" fill="rgb(225,35,8)" fg:x="47658" fg:w="798"/><text x="48.4351%" y="270.50"></text></g><g><title>flatten (sourmash/minhash.py:1099) (1,274 samples, 1.29%)</title><rect x="47.7059%" y="212" width="1.2881%" height="15" fill="rgb(250,213,24)" fg:x="47184" fg:w="1274"/><text x="47.9559%" y="222.50"></text></g><g><title>flatten (sourmash/minhash.py:683) (834 samples, 0.84%)</title><rect x="48.1508%" y="228" width="0.8432%" height="15" fill="rgb(247,123,22)" fg:x="47624" fg:w="834"/><text x="48.4008%" y="238.50"></text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:111) (1,349 samples, 1.36%)</title><rect x="47.6503%" y="196" width="1.3639%" height="15" fill="rgb(231,138,38)" fg:x="47129" fg:w="1349"/><text x="47.9003%" y="206.50"></text></g><g><title>find (sourmash/index/__init__.py:147) (1,740 samples, 1.76%)</title><rect x="47.3106%" y="164" width="1.7592%" height="15" fill="rgb(231,145,46)" fg:x="46793" fg:w="1740"/><text x="47.5606%" y="174.50"></text></g><g><title>prepare_subject (sourmash/index/__init__.py:131) (1,606 samples, 1.62%)</title><rect x="47.4461%" y="180" width="1.6238%" height="15" fill="rgb(251,118,11)" fg:x="46927" fg:w="1606"/><text x="47.6961%" y="190.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (17,406 samples, 17.60%)</title><rect x="49.2832%" y="212" width="17.5985%" height="15" fill="rgb(217,147,25)" fg:x="48744" fg:w="17406"/><text x="49.5332%" y="222.50">rustcall (sourmash/utils.py..</text></g><g><title>minhash (sourmash/signature.py:47) (17,538 samples, 17.73%)</title><rect x="49.2478%" y="180" width="17.7320%" height="15" fill="rgb(247,81,37)" fg:x="48709" fg:w="17538"/><text x="49.4978%" y="190.50">minhash (sourmash/signature...</text></g><g><title>_methodcall (sourmash/utils.py:25) (17,522 samples, 17.72%)</title><rect x="49.2639%" y="196" width="17.7158%" height="15" fill="rgb(209,12,38)" fg:x="48725" fg:w="17522"/><text x="49.5139%" y="206.50">_methodcall (sourmash/utils...</text></g><g><title>scaled (sourmash/minhash.py:524) (110 samples, 0.11%)</title><rect x="67.2497%" y="196" width="0.1112%" height="15" fill="rgb(227,1,9)" fg:x="66514" fg:w="110"/><text x="67.4997%" y="206.50"></text></g><g><title>find (sourmash/index/__init__.py:149) (18,273 samples, 18.48%)</title><rect x="49.0698%" y="164" width="18.4751%" height="15" fill="rgb(248,47,43)" fg:x="48533" fg:w="18273"/><text x="49.3198%" y="174.50">find (sourmash/index/__init__..</text></g><g><title>prepare_query (sourmash/index/__init__.py:134) (559 samples, 0.57%)</title><rect x="66.9798%" y="180" width="0.5652%" height="15" fill="rgb(221,10,30)" fg:x="66247" fg:w="559"/><text x="67.2298%" y="190.50"></text></g><g><title>scaled (sourmash/minhash.py:526) (181 samples, 0.18%)</title><rect x="67.3619%" y="196" width="0.1830%" height="15" fill="rgb(210,229,1)" fg:x="66625" fg:w="181"/><text x="67.6119%" y="206.50"></text></g><g><title>_get_scaled_for_max_hash (sourmash/minhash.py:66) (148 samples, 0.15%)</title><rect x="67.3953%" y="212" width="0.1496%" height="15" fill="rgb(222,148,37)" fg:x="66658" fg:w="148"/><text x="67.6453%" y="222.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (23,377 samples, 23.64%)</title><rect x="67.7795%" y="212" width="23.6356%" height="15" fill="rgb(234,67,33)" fg:x="67038" fg:w="23377"/><text x="68.0295%" y="222.50">rustcall (sourmash/utils.py:68)</text></g><g><title>intersection_and_union_size (sourmash/minhash.py:617) (23,476 samples, 23.74%)</title><rect x="67.7381%" y="180" width="23.7357%" height="15" fill="rgb(247,98,35)" fg:x="66997" fg:w="23476"/><text x="67.9881%" y="190.50">intersection_and_union_size (sourmash/..</text></g><g><title>_methodcall (sourmash/utils.py:25) (23,463 samples, 23.72%)</title><rect x="67.7512%" y="196" width="23.7225%" height="15" fill="rgb(247,138,52)" fg:x="67010" fg:w="23463"/><text x="68.0012%" y="206.50">_methodcall (sourmash/utils.py:25)</text></g><g><title>find (sourmash/index/__init__.py:154) (23,694 samples, 23.96%)</title><rect x="67.5824%" y="164" width="23.9561%" height="15" fill="rgb(213,79,30)" fg:x="66843" fg:w="23694"/><text x="67.8324%" y="174.50">find (sourmash/index/__init__.py:154)</text></g><g><title>find (sourmash/index/__init__.py:156) (139 samples, 0.14%)</title><rect x="91.5384%" y="164" width="0.1405%" height="15" fill="rgb(246,177,23)" fg:x="90537" fg:w="139"/><text x="91.7884%" y="174.50"></text></g><g><title>counter_gather (sourmash/index/__init__.py:303) (90,108 samples, 91.10%)</title><rect x="0.6794%" y="132" width="91.1047%" height="15" fill="rgb(230,62,27)" fg:x="672" fg:w="90108"/><text x="0.9294%" y="142.50">counter_gather (sourmash/index/__init__.py:303)</text></g><g><title>prefetch (sourmash/index/__init__.py:240) (90,107 samples, 91.10%)</title><rect x="0.6804%" y="148" width="91.1037%" height="15" fill="rgb(216,154,8)" fg:x="673" fg:w="90107"/><text x="0.9304%" y="158.50">prefetch (sourmash/index/__init__.py:240)</text></g><g><title>gather (sourmash/commands.py:760) (90,168 samples, 91.17%)</title><rect x="0.6794%" y="116" width="91.1653%" height="15" fill="rgb(244,35,45)" fg:x="672" fg:w="90168"/><text x="0.9294%" y="126.50">gather (sourmash/commands.py:760)</text></g><g><title>gather (sourmash/commands.py:769) (164 samples, 0.17%)</title><rect x="91.8448%" y="116" width="0.1658%" height="15" fill="rgb(251,115,12)" fg:x="90840" fg:w="164"/><text x="92.0948%" y="126.50"></text></g><g><title>gather (sourmash/commands.py:771) (6,732 samples, 6.81%)</title><rect x="92.0106%" y="116" width="6.8065%" height="15" fill="rgb(240,54,50)" fg:x="91004" fg:w="6732"/><text x="92.2606%" y="126.50">gather (s..</text></g><g><title>remove_many (sourmash/minhash.py:463) (6,732 samples, 6.81%)</title><rect x="92.0106%" y="132" width="6.8065%" height="15" fill="rgb(233,84,52)" fg:x="91004" fg:w="6732"/><text x="92.2606%" y="142.50">remove_ma..</text></g><g><title>_methodcall (sourmash/utils.py:25) (6,732 samples, 6.81%)</title><rect x="92.0106%" y="148" width="6.8065%" height="15" fill="rgb(207,117,47)" fg:x="91004" fg:w="6732"/><text x="92.2606%" y="158.50">_methodca..</text></g><g><title>rustcall (sourmash/utils.py:68) (6,732 samples, 6.81%)</title><rect x="92.0106%" y="164" width="6.8065%" height="15" fill="rgb(249,43,39)" fg:x="91004" fg:w="6732"/><text x="92.2606%" y="174.50">rustcall ..</text></g><g><title>__next__ (sourmash/search.py:788) (240 samples, 0.24%)</title><rect x="99.2215%" y="132" width="0.2427%" height="15" fill="rgb(209,38,44)" fg:x="98136" fg:w="240"/><text x="99.4715%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (sourmash/search.py:788) (232 samples, 0.23%)</title><rect x="99.2296%" y="148" width="0.2346%" height="15" fill="rgb(236,212,23)" fg:x="98144" fg:w="232"/><text x="99.4796%" y="158.50"></text></g><g><title>__post_init__ (sourmash/search.py:514) (210 samples, 0.21%)</title><rect x="99.4651%" y="164" width="0.2123%" height="15" fill="rgb(242,79,21)" fg:x="98377" fg:w="210"/><text x="99.7151%" y="174.50"></text></g><g><title>gather (sourmash/commands.py:815) (892 samples, 0.90%)</title><rect x="98.8888%" y="116" width="0.9019%" height="15" fill="rgb(211,96,35)" fg:x="97807" fg:w="892"/><text x="99.1388%" y="126.50"></text></g><g><title>__next__ (sourmash/search.py:794) (322 samples, 0.33%)</title><rect x="99.4651%" y="132" width="0.3256%" height="15" fill="rgb(253,215,40)" fg:x="98377" fg:w="322"/><text x="99.7151%" y="142.50"></text></g><g><title>__init__ (&lt;string&gt;:19) (322 samples, 0.33%)</title><rect x="99.4651%" y="148" width="0.3256%" height="15" fill="rgb(211,81,21)" fg:x="98377" fg:w="322"/><text x="99.7151%" y="158.50"></text></g><g><title>__post_init__ (sourmash/search.py:516) (111 samples, 0.11%)</title><rect x="99.6785%" y="164" width="0.1122%" height="15" fill="rgb(208,190,38)" fg:x="98588" fg:w="111"/><text x="99.9285%" y="174.50"></text></g><g><title>main (sourmash/__main__.py:13) (98,701 samples, 99.79%)</title><rect x="0.0000%" y="84" width="99.7927%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="98701"/><text x="0.2500%" y="94.50">main (sourmash/__main__.py:13)</text></g><g><title>main (sourmash/cli/gather.py:158) (98,701 samples, 99.79%)</title><rect x="0.0000%" y="100" width="99.7927%" height="15" fill="rgb(237,122,38)" fg:x="0" fg:w="98701"/><text x="0.2500%" y="110.50">main (sourmash/cli/gather.py:158)</text></g><g><title>&lt;module&gt; (sourmash:11) (98,718 samples, 99.81%)</title><rect x="0.0000%" y="68" width="99.8099%" height="15" fill="rgb(244,218,35)" fg:x="0" fg:w="98718"/><text x="0.2500%" y="78.50">&lt;module&gt; (sourmash:11)</text></g><g><title>&lt;module&gt; (sourmash/__init__.py:50) (133 samples, 0.13%)</title><rect x="99.8574%" y="212" width="0.1345%" height="15" fill="rgb(240,68,47)" fg:x="98765" fg:w="133"/><text x="100.1074%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (133 samples, 0.13%)</title><rect x="99.8574%" y="228" width="0.1345%" height="15" fill="rgb(210,16,53)" fg:x="98765" fg:w="133"/><text x="100.1074%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (133 samples, 0.13%)</title><rect x="99.8574%" y="244" width="0.1345%" height="15" fill="rgb(235,124,12)" fg:x="98765" fg:w="133"/><text x="100.1074%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (133 samples, 0.13%)</title><rect x="99.8574%" y="260" width="0.1345%" height="15" fill="rgb(224,169,11)" fg:x="98765" fg:w="133"/><text x="100.1074%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (133 samples, 0.13%)</title><rect x="99.8574%" y="276" width="0.1345%" height="15" fill="rgb(250,166,2)" fg:x="98765" fg:w="133"/><text x="100.1074%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (133 samples, 0.13%)</title><rect x="99.8574%" y="292" width="0.1345%" height="15" fill="rgb(242,216,29)" fg:x="98765" fg:w="133"/><text x="100.1074%" y="302.50"></text></g><g><title>&lt;module&gt; (sourmash/minhash.py:9) (129 samples, 0.13%)</title><rect x="99.8615%" y="308" width="0.1304%" height="15" fill="rgb(230,116,27)" fg:x="98769" fg:w="129"/><text x="100.1115%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (129 samples, 0.13%)</title><rect x="99.8615%" y="324" width="0.1304%" height="15" fill="rgb(228,99,48)" fg:x="98769" fg:w="129"/><text x="100.1115%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (129 samples, 0.13%)</title><rect x="99.8615%" y="340" width="0.1304%" height="15" fill="rgb(253,11,6)" fg:x="98769" fg:w="129"/><text x="100.1115%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (129 samples, 0.13%)</title><rect x="99.8615%" y="356" width="0.1304%" height="15" fill="rgb(247,143,39)" fg:x="98769" fg:w="129"/><text x="100.1115%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (129 samples, 0.13%)</title><rect x="99.8615%" y="372" width="0.1304%" height="15" fill="rgb(236,97,10)" fg:x="98769" fg:w="129"/><text x="100.1115%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (129 samples, 0.13%)</title><rect x="99.8615%" y="388" width="0.1304%" height="15" fill="rgb(233,208,19)" fg:x="98769" fg:w="129"/><text x="100.1115%" y="398.50"></text></g><g><title>&lt;module&gt; (sourmash:7) (185 samples, 0.19%)</title><rect x="99.8099%" y="68" width="0.1870%" height="15" fill="rgb(216,164,2)" fg:x="98718" fg:w="185"/><text x="100.0599%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (185 samples, 0.19%)</title><rect x="99.8099%" y="84" width="0.1870%" height="15" fill="rgb(220,129,5)" fg:x="98718" fg:w="185"/><text x="100.0599%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (185 samples, 0.19%)</title><rect x="99.8099%" y="100" width="0.1870%" height="15" fill="rgb(242,17,10)" fg:x="98718" fg:w="185"/><text x="100.0599%" y="110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (185 samples, 0.19%)</title><rect x="99.8099%" y="116" width="0.1870%" height="15" fill="rgb(242,107,0)" fg:x="98718" fg:w="185"/><text x="100.0599%" y="126.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (185 samples, 0.19%)</title><rect x="99.8099%" y="132" width="0.1870%" height="15" fill="rgb(251,28,31)" fg:x="98718" fg:w="185"/><text x="100.0599%" y="142.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (185 samples, 0.19%)</title><rect x="99.8099%" y="148" width="0.1870%" height="15" fill="rgb(233,223,10)" fg:x="98718" fg:w="185"/><text x="100.0599%" y="158.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (185 samples, 0.19%)</title><rect x="99.8099%" y="164" width="0.1870%" height="15" fill="rgb(215,21,27)" fg:x="98718" fg:w="185"/><text x="100.0599%" y="174.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (185 samples, 0.19%)</title><rect x="99.8099%" y="180" width="0.1870%" height="15" fill="rgb(232,23,21)" fg:x="98718" fg:w="185"/><text x="100.0599%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (185 samples, 0.19%)</title><rect x="99.8099%" y="196" width="0.1870%" height="15" fill="rgb(244,5,23)" fg:x="98718" fg:w="185"/><text x="100.0599%" y="206.50"></text></g><g><title>all (98,906 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(226,81,46)" fg:x="0" fg:w="98906"/><text x="0.2500%" y="62.50"></text></g></svg></svg>