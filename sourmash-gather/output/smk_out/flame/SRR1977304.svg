<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="426" onload="init(evt)" viewBox="0 0 1200 426" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="426" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o ../../output/smk_out/flame/SRR1977304.svg -- sourmash gather ../../input/hu/SRR1977304.abundtrim.fq.gz.sig /group/ctbrowngrp/sourmash-db/gtdb-rs207/gtdb-rs207.genomic-reps.dna.k31.zip -o ../../output/smk_out/flame/csv/SRR1977304.csv</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="415.00"> </text><svg id="frames" x="10" width="1180" total_samples="90689"><g><title>load_signatures (sourmash/signature.py:393) (195 samples, 0.22%)</title><rect x="0.0540%" y="244" width="0.2150%" height="15" fill="rgb(227,0,7)" fg:x="49" fg:w="195"/><text x="0.3040%" y="254.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (195 samples, 0.22%)</title><rect x="0.0540%" y="260" width="0.2150%" height="15" fill="rgb(217,0,24)" fg:x="49" fg:w="195"/><text x="0.3040%" y="270.50"></text></g><g><title>load_from_path (sourmash/index/__init__.py:1020) (199 samples, 0.22%)</title><rect x="0.0540%" y="196" width="0.2194%" height="15" fill="rgb(221,193,54)" fg:x="49" fg:w="199"/><text x="0.3040%" y="206.50"></text></g><g><title>load (sourmash/index/__init__.py:408) (199 samples, 0.22%)</title><rect x="0.0540%" y="212" width="0.2194%" height="15" fill="rgb(248,212,6)" fg:x="49" fg:w="199"/><text x="0.3040%" y="222.50"></text></g><g><title>__init__ (sourmash/index/__init__.py:378) (199 samples, 0.22%)</title><rect x="0.0540%" y="228" width="0.2194%" height="15" fill="rgb(208,68,35)" fg:x="49" fg:w="199"/><text x="0.3040%" y="238.50"></text></g><g><title>load_query_signature (sourmash/sourmash_args.py:213) (236 samples, 0.26%)</title><rect x="0.0176%" y="132" width="0.2602%" height="15" fill="rgb(232,128,0)" fg:x="16" fg:w="236"/><text x="0.2676%" y="142.50"></text></g><g><title>load_file_as_signatures (sourmash/sourmash_args.py:536) (236 samples, 0.26%)</title><rect x="0.0176%" y="148" width="0.2602%" height="15" fill="rgb(207,160,47)" fg:x="16" fg:w="236"/><text x="0.2676%" y="158.50"></text></g><g><title>_load_database (sourmash/sourmash_args.py:453) (236 samples, 0.26%)</title><rect x="0.0176%" y="164" width="0.2602%" height="15" fill="rgb(228,23,34)" fg:x="16" fg:w="236"/><text x="0.2676%" y="174.50"></text></g><g><title>_multiindex_load_from_path (sourmash/sourmash_args.py:383) (203 samples, 0.22%)</title><rect x="0.0540%" y="180" width="0.2238%" height="15" fill="rgb(218,30,26)" fg:x="49" fg:w="203"/><text x="0.3040%" y="190.50"></text></g><g><title>gather (sourmash/commands.py:700) (242 samples, 0.27%)</title><rect x="0.0176%" y="116" width="0.2668%" height="15" fill="rgb(220,122,19)" fg:x="16" fg:w="242"/><text x="0.2676%" y="126.50"></text></g><g><title>load_from_csv (sourmash/manifest.py:79) (147 samples, 0.16%)</title><rect x="0.3396%" y="228" width="0.1621%" height="15" fill="rgb(250,228,42)" fg:x="308" fg:w="147"/><text x="0.5896%" y="238.50"></text></g><g><title>load_from_csv (sourmash/manifest.py:83) (143 samples, 0.16%)</title><rect x="0.5304%" y="228" width="0.1577%" height="15" fill="rgb(240,193,28)" fg:x="481" fg:w="143"/><text x="0.7804%" y="238.50"></text></g><g><title>_load_database (sourmash/sourmash_args.py:453) (373 samples, 0.41%)</title><rect x="0.2878%" y="148" width="0.4113%" height="15" fill="rgb(216,20,37)" fg:x="261" fg:w="373"/><text x="0.5378%" y="158.50"></text></g><g><title>_load_zipfile (sourmash/sourmash_args.py:416) (355 samples, 0.39%)</title><rect x="0.3076%" y="164" width="0.3914%" height="15" fill="rgb(206,188,39)" fg:x="279" fg:w="355"/><text x="0.5576%" y="174.50"></text></g><g><title>load (sourmash/index/__init__.py:587) (345 samples, 0.38%)</title><rect x="0.3187%" y="180" width="0.3804%" height="15" fill="rgb(217,207,13)" fg:x="289" fg:w="345"/><text x="0.5687%" y="190.50"></text></g><g><title>__init__ (sourmash/index/__init__.py:520) (345 samples, 0.38%)</title><rect x="0.3187%" y="196" width="0.3804%" height="15" fill="rgb(231,73,38)" fg:x="289" fg:w="345"/><text x="0.5687%" y="206.50"></text></g><g><title>_load_manifest (sourmash/index/__init__.py:542) (326 samples, 0.36%)</title><rect x="0.3396%" y="212" width="0.3595%" height="15" fill="rgb(225,20,46)" fg:x="308" fg:w="326"/><text x="0.5896%" y="222.50"></text></g><g><title>load_dbs_and_sigs (sourmash/sourmash_args.py:308) (375 samples, 0.41%)</title><rect x="0.2878%" y="132" width="0.4135%" height="15" fill="rgb(210,31,41)" fg:x="261" fg:w="375"/><text x="0.5378%" y="142.50"></text></g><g><title>gather (sourmash/commands.py:725) (400 samples, 0.44%)</title><rect x="0.2878%" y="116" width="0.4411%" height="15" fill="rgb(221,200,47)" fg:x="261" fg:w="400"/><text x="0.5378%" y="126.50"></text></g><g><title>signatures (sourmash/index/__init__.py:615) (121 samples, 0.13%)</title><rect x="0.8832%" y="196" width="0.1334%" height="15" fill="rgb(226,26,5)" fg:x="801" fg:w="121"/><text x="1.1332%" y="206.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (574 samples, 0.63%)</title><rect x="1.2096%" y="244" width="0.6329%" height="15" fill="rgb(249,33,26)" fg:x="1097" fg:w="574"/><text x="1.4596%" y="254.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (608 samples, 0.67%)</title><rect x="1.1799%" y="228" width="0.6704%" height="15" fill="rgb(235,183,28)" fg:x="1070" fg:w="608"/><text x="1.4299%" y="238.50"></text></g><g><title>load (sourmash/sbt_storage.py:158) (669 samples, 0.74%)</title><rect x="1.1545%" y="212" width="0.7377%" height="15" fill="rgb(221,5,38)" fg:x="1047" fg:w="669"/><text x="1.4045%" y="222.50"></text></g><g><title>signatures (sourmash/index/__init__.py:616) (924 samples, 1.02%)</title><rect x="1.0167%" y="196" width="1.0189%" height="15" fill="rgb(247,18,42)" fg:x="922" fg:w="924"/><text x="1.2667%" y="206.50"></text></g><g><title>load_signatures (sourmash/signature.py:374) (211 samples, 0.23%)</title><rect x="2.2318%" y="212" width="0.2327%" height="15" fill="rgb(241,131,45)" fg:x="2024" fg:w="211"/><text x="2.4818%" y="222.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (47,704 samples, 52.60%)</title><rect x="2.5317%" y="228" width="52.6017%" height="15" fill="rgb(249,31,29)" fg:x="2296" fg:w="47704"/><text x="2.7817%" y="238.50">rustcall (sourmash/utils.py:68)</text></g><g><title>load_signatures (sourmash/signature.py:406) (47,784 samples, 52.69%)</title><rect x="2.5031%" y="212" width="52.6900%" height="15" fill="rgb(225,111,53)" fg:x="2270" fg:w="47784"/><text x="2.7531%" y="222.50">load_signatures (sourmash/signature.py:406)</text></g><g><title>__copy__ (sourmash/signature.py:229) (305 samples, 0.34%)</title><rect x="55.4025%" y="244" width="0.3363%" height="15" fill="rgb(238,160,17)" fg:x="50244" fg:w="305"/><text x="55.6525%" y="254.50"></text></g><g><title>__copy__ (sourmash/signature.py:230) (143 samples, 0.16%)</title><rect x="55.7388%" y="244" width="0.1577%" height="15" fill="rgb(214,148,48)" fg:x="50549" fg:w="143"/><text x="55.9888%" y="254.50"></text></g><g><title>minhash (sourmash/signature.py:47) (102 samples, 0.11%)</title><rect x="55.7841%" y="260" width="0.1125%" height="15" fill="rgb(232,36,49)" fg:x="50590" fg:w="102"/><text x="56.0341%" y="270.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (95 samples, 0.10%)</title><rect x="55.7918%" y="276" width="0.1048%" height="15" fill="rgb(209,103,24)" fg:x="50597" fg:w="95"/><text x="56.0418%" y="286.50"></text></g><g><title>__copy__ (sourmash/signature.py:231) (178 samples, 0.20%)</title><rect x="55.8965%" y="244" width="0.1963%" height="15" fill="rgb(229,88,8)" fg:x="50692" fg:w="178"/><text x="56.1465%" y="254.50"></text></g><g><title>name (sourmash/signature.py:98) (165 samples, 0.18%)</title><rect x="55.9109%" y="260" width="0.1819%" height="15" fill="rgb(213,181,19)" fg:x="50705" fg:w="165"/><text x="56.1609%" y="270.50"></text></g><g><title>to_frozen (sourmash/signature.py:240) (709 samples, 0.78%)</title><rect x="55.3904%" y="228" width="0.7818%" height="15" fill="rgb(254,191,54)" fg:x="50233" fg:w="709"/><text x="55.6404%" y="238.50"></text></g><g><title>load_signatures (sourmash/signature.py:424) (756 samples, 0.83%)</title><rect x="55.3573%" y="212" width="0.8336%" height="15" fill="rgb(241,83,37)" fg:x="50203" fg:w="756"/><text x="55.6073%" y="222.50"></text></g><g><title>signatures (sourmash/index/__init__.py:617) (49,115 samples, 54.16%)</title><rect x="2.0355%" y="196" width="54.1576%" height="15" fill="rgb(233,36,39)" fg:x="1846" fg:w="49115"/><text x="2.2855%" y="206.50">signatures (sourmash/index/__init__.py:617)</text></g><g><title>__contains__ (sourmash/manifest.py:337) (131 samples, 0.14%)</title><rect x="56.2229%" y="212" width="0.1444%" height="15" fill="rgb(226,3,54)" fg:x="50988" fg:w="131"/><text x="56.4729%" y="222.50"></text></g><g><title>md5sum (sourmash/signature.py:83) (116 samples, 0.13%)</title><rect x="56.2395%" y="228" width="0.1279%" height="15" fill="rgb(245,192,40)" fg:x="51003" fg:w="116"/><text x="56.4895%" y="238.50"></text></g><g><title>signatures (sourmash/index/__init__.py:620) (204 samples, 0.22%)</title><rect x="56.1931%" y="196" width="0.2249%" height="15" fill="rgb(238,167,29)" fg:x="50961" fg:w="204"/><text x="56.4431%" y="206.50"></text></g><g><title>signatures_with_location (sourmash/index/__init__.py:79) (50,382 samples, 55.55%)</title><rect x="0.8766%" y="180" width="55.5547%" height="15" fill="rgb(232,182,51)" fg:x="795" fg:w="50382"/><text x="1.1266%" y="190.50">signatures_with_location (sourmash/index/__init__.py:79)</text></g><g><title>find (sourmash/index/__init__.py:146) (50,577 samples, 55.77%)</title><rect x="0.7972%" y="164" width="55.7697%" height="15" fill="rgb(231,60,39)" fg:x="723" fg:w="50577"/><text x="1.0472%" y="174.50">find (sourmash/index/__init__.py:146)</text></g><g><title>signatures_with_location (sourmash/index/__init__.py:80) (123 samples, 0.14%)</title><rect x="56.4313%" y="180" width="0.1356%" height="15" fill="rgb(208,69,12)" fg:x="51177" fg:w="123"/><text x="56.6813%" y="190.50"></text></g><g><title>location (sourmash/index/__init__.py:569) (99 samples, 0.11%)</title><rect x="56.4578%" y="196" width="0.1092%" height="15" fill="rgb(235,93,37)" fg:x="51201" fg:w="99"/><text x="56.7078%" y="206.50"></text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:108) (166 samples, 0.18%)</title><rect x="56.6960%" y="196" width="0.1830%" height="15" fill="rgb(213,116,39)" fg:x="51417" fg:w="166"/><text x="56.9460%" y="206.50"></text></g><g><title>scaled (sourmash/minhash.py:526) (116 samples, 0.13%)</title><rect x="56.7511%" y="212" width="0.1279%" height="15" fill="rgb(222,207,29)" fg:x="51467" fg:w="116"/><text x="57.0011%" y="222.50"></text></g><g><title>_get_scaled_for_max_hash (sourmash/minhash.py:66) (99 samples, 0.11%)</title><rect x="56.7698%" y="228" width="0.1092%" height="15" fill="rgb(206,96,30)" fg:x="51484" fg:w="99"/><text x="57.0198%" y="238.50"></text></g><g><title>flatten (sourmash/minhash.py:678) (159 samples, 0.18%)</title><rect x="57.0212%" y="228" width="0.1753%" height="15" fill="rgb(218,138,4)" fg:x="51712" fg:w="159"/><text x="57.2712%" y="238.50"></text></g><g><title>flatten (sourmash/minhash.py:679) (124 samples, 0.14%)</title><rect x="57.1966%" y="228" width="0.1367%" height="15" fill="rgb(250,191,14)" fg:x="51871" fg:w="124"/><text x="57.4466%" y="238.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (770 samples, 0.85%)</title><rect x="57.4954%" y="276" width="0.8491%" height="15" fill="rgb(239,60,40)" fg:x="52142" fg:w="770"/><text x="57.7454%" y="286.50"></text></g><g><title>add_many (sourmash/minhash.py:452) (793 samples, 0.87%)</title><rect x="57.4722%" y="244" width="0.8744%" height="15" fill="rgb(206,27,48)" fg:x="52121" fg:w="793"/><text x="57.7222%" y="254.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (785 samples, 0.87%)</title><rect x="57.4811%" y="260" width="0.8656%" height="15" fill="rgb(225,35,8)" fg:x="52129" fg:w="785"/><text x="57.7311%" y="270.50"></text></g><g><title>flatten (sourmash/minhash.py:1099) (1,234 samples, 1.36%)</title><rect x="56.9871%" y="212" width="1.3607%" height="15" fill="rgb(250,213,24)" fg:x="51681" fg:w="1234"/><text x="57.2371%" y="222.50"></text></g><g><title>flatten (sourmash/minhash.py:683) (808 samples, 0.89%)</title><rect x="57.4568%" y="228" width="0.8910%" height="15" fill="rgb(247,123,22)" fg:x="52107" fg:w="808"/><text x="57.7068%" y="238.50"></text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:111) (1,312 samples, 1.45%)</title><rect x="56.9176%" y="196" width="1.4467%" height="15" fill="rgb(231,138,38)" fg:x="51618" fg:w="1312"/><text x="57.1676%" y="206.50"></text></g><g><title>find (sourmash/index/__init__.py:147) (1,679 samples, 1.85%)</title><rect x="56.5669%" y="164" width="1.8514%" height="15" fill="rgb(231,145,46)" fg:x="51300" fg:w="1679"/><text x="56.8169%" y="174.50">f..</text></g><g><title>prepare_subject (sourmash/index/__init__.py:131) (1,570 samples, 1.73%)</title><rect x="56.6871%" y="180" width="1.7312%" height="15" fill="rgb(251,118,11)" fg:x="51409" fg:w="1570"/><text x="56.9371%" y="190.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (9,342 samples, 10.30%)</title><rect x="58.6455%" y="212" width="10.3011%" height="15" fill="rgb(217,147,25)" fg:x="53185" fg:w="9342"/><text x="58.8955%" y="222.50">rustcall (sourm..</text></g><g><title>minhash (sourmash/signature.py:47) (9,451 samples, 10.42%)</title><rect x="58.5992%" y="180" width="10.4213%" height="15" fill="rgb(247,81,37)" fg:x="53143" fg:w="9451"/><text x="58.8492%" y="190.50">minhash (sourma..</text></g><g><title>_methodcall (sourmash/utils.py:25) (9,436 samples, 10.40%)</title><rect x="58.6157%" y="196" width="10.4048%" height="15" fill="rgb(209,12,38)" fg:x="53158" fg:w="9436"/><text x="58.8657%" y="206.50">_methodcall (so..</text></g><g><title>find (sourmash/index/__init__.py:149) (10,082 samples, 11.12%)</title><rect x="58.4183%" y="164" width="11.1171%" height="15" fill="rgb(227,1,9)" fg:x="52979" fg:w="10082"/><text x="58.6683%" y="174.50">find (sourmash/i..</text></g><g><title>prepare_query (sourmash/index/__init__.py:134) (467 samples, 0.51%)</title><rect x="69.0205%" y="180" width="0.5149%" height="15" fill="rgb(248,47,43)" fg:x="62594" fg:w="467"/><text x="69.2705%" y="190.50"></text></g><g><title>scaled (sourmash/minhash.py:526) (177 samples, 0.20%)</title><rect x="69.3403%" y="196" width="0.1952%" height="15" fill="rgb(221,10,30)" fg:x="62884" fg:w="177"/><text x="69.5903%" y="206.50"></text></g><g><title>_get_scaled_for_max_hash (sourmash/minhash.py:66) (139 samples, 0.15%)</title><rect x="69.3822%" y="212" width="0.1533%" height="15" fill="rgb(210,229,1)" fg:x="62922" fg:w="139"/><text x="69.6322%" y="222.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (22,720 samples, 25.05%)</title><rect x="69.7306%" y="212" width="25.0527%" height="15" fill="rgb(222,148,37)" fg:x="63238" fg:w="22720"/><text x="69.9806%" y="222.50">rustcall (sourmash/utils.py:68)</text></g><g><title>intersection_and_union_size (sourmash/minhash.py:617) (22,826 samples, 25.17%)</title><rect x="69.6865%" y="180" width="25.1695%" height="15" fill="rgb(234,67,33)" fg:x="63198" fg:w="22826"/><text x="69.9365%" y="190.50">intersection_and_union_size (sourmash/mi..</text></g><g><title>_methodcall (sourmash/utils.py:25) (22,810 samples, 25.15%)</title><rect x="69.7042%" y="196" width="25.1519%" height="15" fill="rgb(247,98,35)" fg:x="63214" fg:w="22810"/><text x="69.9542%" y="206.50">_methodcall (sourmash/utils.py:25)</text></g><g><title>find (sourmash/index/__init__.py:154) (22,996 samples, 25.36%)</title><rect x="69.5685%" y="164" width="25.3570%" height="15" fill="rgb(247,138,52)" fg:x="63091" fg:w="22996"/><text x="69.8185%" y="174.50">find (sourmash/index/__init__.py:154)</text></g><g><title>find (sourmash/index/__init__.py:156) (126 samples, 0.14%)</title><rect x="94.9255%" y="164" width="0.1389%" height="15" fill="rgb(213,79,30)" fg:x="86087" fg:w="126"/><text x="95.1755%" y="174.50"></text></g><g><title>counter_gather (sourmash/index/__init__.py:303) (85,600 samples, 94.39%)</title><rect x="0.7961%" y="132" width="94.3885%" height="15" fill="rgb(246,177,23)" fg:x="722" fg:w="85600"/><text x="1.0461%" y="142.50">counter_gather (sourmash/index/__init__.py:303)</text></g><g><title>prefetch (sourmash/index/__init__.py:240) (85,600 samples, 94.39%)</title><rect x="0.7961%" y="148" width="94.3885%" height="15" fill="rgb(230,62,27)" fg:x="722" fg:w="85600"/><text x="1.0461%" y="158.50">prefetch (sourmash/index/__init__.py:240)</text></g><g><title>count_common (sourmash/minhash.py:607) (124 samples, 0.14%)</title><rect x="95.1880%" y="164" width="0.1367%" height="15" fill="rgb(216,154,8)" fg:x="86325" fg:w="124"/><text x="95.4380%" y="174.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (124 samples, 0.14%)</title><rect x="95.1880%" y="180" width="0.1367%" height="15" fill="rgb(244,35,45)" fg:x="86325" fg:w="124"/><text x="95.4380%" y="190.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (122 samples, 0.13%)</title><rect x="95.1902%" y="196" width="0.1345%" height="15" fill="rgb(251,115,12)" fg:x="86327" fg:w="122"/><text x="95.4402%" y="206.50"></text></g><g><title>add (sourmash/index/__init__.py:728) (132 samples, 0.15%)</title><rect x="95.1857%" y="148" width="0.1456%" height="15" fill="rgb(240,54,50)" fg:x="86323" fg:w="132"/><text x="95.4357%" y="158.50"></text></g><g><title>gather (sourmash/commands.py:760) (85,746 samples, 94.55%)</title><rect x="0.7961%" y="116" width="94.5495%" height="15" fill="rgb(233,84,52)" fg:x="722" fg:w="85746"/><text x="1.0461%" y="126.50">gather (sourmash/commands.py:760)</text></g><g><title>counter_gather (sourmash/index/__init__.py:304) (146 samples, 0.16%)</title><rect x="95.1846%" y="132" width="0.1610%" height="15" fill="rgb(207,117,47)" fg:x="86322" fg:w="146"/><text x="95.4346%" y="142.50"></text></g><g><title>flatten_and_intersect_scaled (sourmash/minhash.py:136) (197 samples, 0.22%)</title><rect x="95.3589%" y="148" width="0.2172%" height="15" fill="rgb(249,43,39)" fg:x="86480" fg:w="197"/><text x="95.6089%" y="158.50"></text></g><g><title>intersection (sourmash/minhash.py:930) (197 samples, 0.22%)</title><rect x="95.3589%" y="164" width="0.2172%" height="15" fill="rgb(209,38,44)" fg:x="86480" fg:w="197"/><text x="95.6089%" y="174.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (197 samples, 0.22%)</title><rect x="95.3589%" y="180" width="0.2172%" height="15" fill="rgb(236,212,23)" fg:x="86480" fg:w="197"/><text x="95.6089%" y="190.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (197 samples, 0.22%)</title><rect x="95.3589%" y="196" width="0.2172%" height="15" fill="rgb(242,79,21)" fg:x="86480" fg:w="197"/><text x="95.6089%" y="206.50"></text></g><g><title>union_found (sourmash/index/__init__.py:766) (214 samples, 0.24%)</title><rect x="95.3456%" y="132" width="0.2360%" height="15" fill="rgb(211,96,35)" fg:x="86468" fg:w="214"/><text x="95.5956%" y="142.50"></text></g><g><title>gather (sourmash/commands.py:769) (228 samples, 0.25%)</title><rect x="95.3456%" y="116" width="0.2514%" height="15" fill="rgb(253,215,40)" fg:x="86468" fg:w="228"/><text x="95.5956%" y="126.50"></text></g><g><title>gather (sourmash/commands.py:771) (2,698 samples, 2.98%)</title><rect x="95.5970%" y="116" width="2.9750%" height="15" fill="rgb(211,81,21)" fg:x="86696" fg:w="2698"/><text x="95.8470%" y="126.50">gat..</text></g><g><title>remove_many (sourmash/minhash.py:463) (2,698 samples, 2.98%)</title><rect x="95.5970%" y="132" width="2.9750%" height="15" fill="rgb(208,190,38)" fg:x="86696" fg:w="2698"/><text x="95.8470%" y="142.50">rem..</text></g><g><title>_methodcall (sourmash/utils.py:25) (2,698 samples, 2.98%)</title><rect x="95.5970%" y="148" width="2.9750%" height="15" fill="rgb(235,213,38)" fg:x="86696" fg:w="2698"/><text x="95.8470%" y="158.50">_me..</text></g><g><title>rustcall (sourmash/utils.py:68) (2,698 samples, 2.98%)</title><rect x="95.5970%" y="164" width="2.9750%" height="15" fill="rgb(237,122,38)" fg:x="86696" fg:w="2698"/><text x="95.8470%" y="174.50">rus..</text></g><g><title>gather (sourmash/commands.py:807) (104 samples, 0.11%)</title><rect x="98.5742%" y="116" width="0.1147%" height="15" fill="rgb(244,218,35)" fg:x="89396" fg:w="104"/><text x="98.8242%" y="126.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (122 samples, 0.13%)</title><rect x="98.7948%" y="212" width="0.1345%" height="15" fill="rgb(240,68,47)" fg:x="89596" fg:w="122"/><text x="99.0448%" y="222.50"></text></g><g><title>consume (sourmash/index/__init__.py:851) (174 samples, 0.19%)</title><rect x="98.7430%" y="164" width="0.1919%" height="15" fill="rgb(210,16,53)" fg:x="89549" fg:w="174"/><text x="98.9930%" y="174.50"></text></g><g><title>minhash (sourmash/signature.py:47) (143 samples, 0.16%)</title><rect x="98.7771%" y="180" width="0.1577%" height="15" fill="rgb(235,124,12)" fg:x="89580" fg:w="143"/><text x="99.0271%" y="190.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (141 samples, 0.16%)</title><rect x="98.7793%" y="196" width="0.1555%" height="15" fill="rgb(224,169,11)" fg:x="89582" fg:w="141"/><text x="99.0293%" y="206.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (105 samples, 0.12%)</title><rect x="98.9580%" y="212" width="0.1158%" height="15" fill="rgb(250,166,2)" fg:x="89744" fg:w="105"/><text x="99.2080%" y="222.50"></text></g><g><title>consume (sourmash/index/__init__.py:852) (129 samples, 0.14%)</title><rect x="98.9348%" y="164" width="0.1422%" height="15" fill="rgb(242,216,29)" fg:x="89723" fg:w="129"/><text x="99.1848%" y="174.50"></text></g><g><title>count_common (sourmash/minhash.py:607) (124 samples, 0.14%)</title><rect x="98.9403%" y="180" width="0.1367%" height="15" fill="rgb(230,116,27)" fg:x="89728" fg:w="124"/><text x="99.1903%" y="190.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (123 samples, 0.14%)</title><rect x="98.9414%" y="196" width="0.1356%" height="15" fill="rgb(228,99,48)" fg:x="89729" fg:w="123"/><text x="99.1914%" y="206.50"></text></g><g><title>__next__ (sourmash/search.py:754) (339 samples, 0.37%)</title><rect x="98.7055%" y="132" width="0.3738%" height="15" fill="rgb(253,11,6)" fg:x="89515" fg:w="339"/><text x="98.9555%" y="142.50"></text></g><g><title>_find_best (sourmash/search.py:651) (309 samples, 0.34%)</title><rect x="98.7385%" y="148" width="0.3407%" height="15" fill="rgb(247,143,39)" fg:x="89545" fg:w="309"/><text x="98.9885%" y="158.50"></text></g><g><title>__next__ (sourmash/search.py:788) (167 samples, 0.18%)</title><rect x="99.1884%" y="132" width="0.1841%" height="15" fill="rgb(236,97,10)" fg:x="89953" fg:w="167"/><text x="99.4384%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (sourmash/search.py:788) (165 samples, 0.18%)</title><rect x="99.1906%" y="148" width="0.1819%" height="15" fill="rgb(233,208,19)" fg:x="89955" fg:w="165"/><text x="99.4406%" y="158.50"></text></g><g><title>__post_init__ (sourmash/search.py:514) (216 samples, 0.24%)</title><rect x="99.3726%" y="164" width="0.2382%" height="15" fill="rgb(216,164,2)" fg:x="90120" fg:w="216"/><text x="99.6226%" y="174.50"></text></g><g><title>__next__ (sourmash/search.py:794) (364 samples, 0.40%)</title><rect x="99.3726%" y="132" width="0.4014%" height="15" fill="rgb(220,129,5)" fg:x="90120" fg:w="364"/><text x="99.6226%" y="142.50"></text></g><g><title>__init__ (&lt;string&gt;:19) (364 samples, 0.40%)</title><rect x="99.3726%" y="148" width="0.4014%" height="15" fill="rgb(242,17,10)" fg:x="90120" fg:w="364"/><text x="99.6226%" y="158.50"></text></g><g><title>__post_init__ (sourmash/search.py:516) (146 samples, 0.16%)</title><rect x="99.6130%" y="164" width="0.1610%" height="15" fill="rgb(242,107,0)" fg:x="90338" fg:w="146"/><text x="99.8630%" y="174.50"></text></g><g><title>gather (sourmash/commands.py:815) (985 samples, 1.09%)</title><rect x="98.6889%" y="116" width="1.0861%" height="15" fill="rgb(251,28,31)" fg:x="89500" fg:w="985"/><text x="98.9389%" y="126.50"></text></g><g><title>main (sourmash/__main__.py:13) (90,486 samples, 99.78%)</title><rect x="0.0000%" y="84" width="99.7762%" height="15" fill="rgb(233,223,10)" fg:x="0" fg:w="90486"/><text x="0.2500%" y="94.50">main (sourmash/__main__.py:13)</text></g><g><title>main (sourmash/cli/gather.py:158) (90,486 samples, 99.78%)</title><rect x="0.0000%" y="100" width="99.7762%" height="15" fill="rgb(215,21,27)" fg:x="0" fg:w="90486"/><text x="0.2500%" y="110.50">main (sourmash/cli/gather.py:158)</text></g><g><title>&lt;module&gt; (sourmash:11) (90,512 samples, 99.80%)</title><rect x="0.0000%" y="68" width="99.8048%" height="15" fill="rgb(232,23,21)" fg:x="0" fg:w="90512"/><text x="0.2500%" y="78.50">&lt;module&gt; (sourmash:11)</text></g><g><title>&lt;module&gt; (sourmash/__init__.py:50) (126 samples, 0.14%)</title><rect x="99.8556%" y="212" width="0.1389%" height="15" fill="rgb(244,5,23)" fg:x="90558" fg:w="126"/><text x="100.1056%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (126 samples, 0.14%)</title><rect x="99.8556%" y="228" width="0.1389%" height="15" fill="rgb(226,81,46)" fg:x="90558" fg:w="126"/><text x="100.1056%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (126 samples, 0.14%)</title><rect x="99.8556%" y="244" width="0.1389%" height="15" fill="rgb(247,70,30)" fg:x="90558" fg:w="126"/><text x="100.1056%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (126 samples, 0.14%)</title><rect x="99.8556%" y="260" width="0.1389%" height="15" fill="rgb(212,68,19)" fg:x="90558" fg:w="126"/><text x="100.1056%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (126 samples, 0.14%)</title><rect x="99.8556%" y="276" width="0.1389%" height="15" fill="rgb(240,187,13)" fg:x="90558" fg:w="126"/><text x="100.1056%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (126 samples, 0.14%)</title><rect x="99.8556%" y="292" width="0.1389%" height="15" fill="rgb(223,113,26)" fg:x="90558" fg:w="126"/><text x="100.1056%" y="302.50"></text></g><g><title>&lt;module&gt; (sourmash/minhash.py:9) (126 samples, 0.14%)</title><rect x="99.8556%" y="308" width="0.1389%" height="15" fill="rgb(206,192,2)" fg:x="90558" fg:w="126"/><text x="100.1056%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (126 samples, 0.14%)</title><rect x="99.8556%" y="324" width="0.1389%" height="15" fill="rgb(241,108,4)" fg:x="90558" fg:w="126"/><text x="100.1056%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (126 samples, 0.14%)</title><rect x="99.8556%" y="340" width="0.1389%" height="15" fill="rgb(247,173,49)" fg:x="90558" fg:w="126"/><text x="100.1056%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (126 samples, 0.14%)</title><rect x="99.8556%" y="356" width="0.1389%" height="15" fill="rgb(224,114,35)" fg:x="90558" fg:w="126"/><text x="100.1056%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (126 samples, 0.14%)</title><rect x="99.8556%" y="372" width="0.1389%" height="15" fill="rgb(245,159,27)" fg:x="90558" fg:w="126"/><text x="100.1056%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (126 samples, 0.14%)</title><rect x="99.8556%" y="388" width="0.1389%" height="15" fill="rgb(245,172,44)" fg:x="90558" fg:w="126"/><text x="100.1056%" y="398.50"></text></g><g><title>&lt;module&gt; (sourmash:7) (175 samples, 0.19%)</title><rect x="99.8048%" y="68" width="0.1930%" height="15" fill="rgb(236,23,11)" fg:x="90512" fg:w="175"/><text x="100.0548%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (175 samples, 0.19%)</title><rect x="99.8048%" y="84" width="0.1930%" height="15" fill="rgb(205,117,38)" fg:x="90512" fg:w="175"/><text x="100.0548%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (175 samples, 0.19%)</title><rect x="99.8048%" y="100" width="0.1930%" height="15" fill="rgb(237,72,25)" fg:x="90512" fg:w="175"/><text x="100.0548%" y="110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (175 samples, 0.19%)</title><rect x="99.8048%" y="116" width="0.1930%" height="15" fill="rgb(244,70,9)" fg:x="90512" fg:w="175"/><text x="100.0548%" y="126.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (175 samples, 0.19%)</title><rect x="99.8048%" y="132" width="0.1930%" height="15" fill="rgb(217,125,39)" fg:x="90512" fg:w="175"/><text x="100.0548%" y="142.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (175 samples, 0.19%)</title><rect x="99.8048%" y="148" width="0.1930%" height="15" fill="rgb(235,36,10)" fg:x="90512" fg:w="175"/><text x="100.0548%" y="158.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (175 samples, 0.19%)</title><rect x="99.8048%" y="164" width="0.1930%" height="15" fill="rgb(251,123,47)" fg:x="90512" fg:w="175"/><text x="100.0548%" y="174.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (175 samples, 0.19%)</title><rect x="99.8048%" y="180" width="0.1930%" height="15" fill="rgb(221,13,13)" fg:x="90512" fg:w="175"/><text x="100.0548%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (175 samples, 0.19%)</title><rect x="99.8048%" y="196" width="0.1930%" height="15" fill="rgb(238,131,9)" fg:x="90512" fg:w="175"/><text x="100.0548%" y="206.50"></text></g><g><title>all (90,689 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(211,50,8)" fg:x="0" fg:w="90689"/><text x="0.2500%" y="62.50"></text></g></svg></svg>