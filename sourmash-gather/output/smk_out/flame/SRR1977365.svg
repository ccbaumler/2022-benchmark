<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="426" onload="init(evt)" viewBox="0 0 1200 426" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="426" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o ../../output/smk_out/flame/SRR1977365.svg -- sourmash gather ../../input/hu/SRR1977365.abundtrim.fq.gz.sig /group/ctbrowngrp/sourmash-db/gtdb-rs207/gtdb-rs207.genomic-reps.dna.k31.zip -o ../../output/smk_out/flame/csv/SRR1977365.csv</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="415.00"> </text><svg id="frames" x="10" width="1180" total_samples="97558"><g><title>load_signatures (sourmash/signature.py:393) (236 samples, 0.24%)</title><rect x="0.0513%" y="244" width="0.2419%" height="15" fill="rgb(227,0,7)" fg:x="50" fg:w="236"/><text x="0.3013%" y="254.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (236 samples, 0.24%)</title><rect x="0.0513%" y="260" width="0.2419%" height="15" fill="rgb(217,0,24)" fg:x="50" fg:w="236"/><text x="0.3013%" y="270.50"></text></g><g><title>load_from_path (sourmash/index/__init__.py:1020) (237 samples, 0.24%)</title><rect x="0.0513%" y="196" width="0.2429%" height="15" fill="rgb(221,193,54)" fg:x="50" fg:w="237"/><text x="0.3013%" y="206.50"></text></g><g><title>load (sourmash/index/__init__.py:408) (237 samples, 0.24%)</title><rect x="0.0513%" y="212" width="0.2429%" height="15" fill="rgb(248,212,6)" fg:x="50" fg:w="237"/><text x="0.3013%" y="222.50"></text></g><g><title>__init__ (sourmash/index/__init__.py:378) (237 samples, 0.24%)</title><rect x="0.0513%" y="228" width="0.2429%" height="15" fill="rgb(208,68,35)" fg:x="50" fg:w="237"/><text x="0.3013%" y="238.50"></text></g><g><title>_load_database (sourmash/sourmash_args.py:453) (280 samples, 0.29%)</title><rect x="0.0092%" y="164" width="0.2870%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="280"/><text x="0.2592%" y="174.50"></text></g><g><title>_multiindex_load_from_path (sourmash/sourmash_args.py:383) (239 samples, 0.24%)</title><rect x="0.0513%" y="180" width="0.2450%" height="15" fill="rgb(207,160,47)" fg:x="50" fg:w="239"/><text x="0.3013%" y="190.50"></text></g><g><title>load_query_signature (sourmash/sourmash_args.py:213) (284 samples, 0.29%)</title><rect x="0.0092%" y="132" width="0.2911%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="284"/><text x="0.2592%" y="142.50"></text></g><g><title>load_file_as_signatures (sourmash/sourmash_args.py:536) (284 samples, 0.29%)</title><rect x="0.0092%" y="148" width="0.2911%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="284"/><text x="0.2592%" y="158.50"></text></g><g><title>gather (sourmash/commands.py:700) (286 samples, 0.29%)</title><rect x="0.0092%" y="116" width="0.2932%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="286"/><text x="0.2592%" y="126.50"></text></g><g><title>load_from_csv (sourmash/manifest.py:83) (114 samples, 0.12%)</title><rect x="0.4725%" y="228" width="0.1169%" height="15" fill="rgb(250,228,42)" fg:x="461" fg:w="114"/><text x="0.7225%" y="238.50"></text></g><g><title>_load_database (sourmash/sourmash_args.py:453) (289 samples, 0.30%)</title><rect x="0.3065%" y="148" width="0.2962%" height="15" fill="rgb(240,193,28)" fg:x="299" fg:w="289"/><text x="0.5565%" y="158.50"></text></g><g><title>_load_zipfile (sourmash/sourmash_args.py:416) (257 samples, 0.26%)</title><rect x="0.3393%" y="164" width="0.2634%" height="15" fill="rgb(216,20,37)" fg:x="331" fg:w="257"/><text x="0.5893%" y="174.50"></text></g><g><title>load (sourmash/index/__init__.py:587) (248 samples, 0.25%)</title><rect x="0.3485%" y="180" width="0.2542%" height="15" fill="rgb(206,188,39)" fg:x="340" fg:w="248"/><text x="0.5985%" y="190.50"></text></g><g><title>__init__ (sourmash/index/__init__.py:520) (248 samples, 0.25%)</title><rect x="0.3485%" y="196" width="0.2542%" height="15" fill="rgb(217,207,13)" fg:x="340" fg:w="248"/><text x="0.5985%" y="206.50"></text></g><g><title>_load_manifest (sourmash/index/__init__.py:542) (219 samples, 0.22%)</title><rect x="0.3782%" y="212" width="0.2245%" height="15" fill="rgb(231,73,38)" fg:x="369" fg:w="219"/><text x="0.6282%" y="222.50"></text></g><g><title>load_dbs_and_sigs (sourmash/sourmash_args.py:308) (290 samples, 0.30%)</title><rect x="0.3065%" y="132" width="0.2973%" height="15" fill="rgb(225,20,46)" fg:x="299" fg:w="290"/><text x="0.5565%" y="142.50"></text></g><g><title>gather (sourmash/commands.py:725) (309 samples, 0.32%)</title><rect x="0.3065%" y="116" width="0.3167%" height="15" fill="rgb(210,31,41)" fg:x="299" fg:w="309"/><text x="0.5565%" y="126.50"></text></g><g><title>signatures (sourmash/index/__init__.py:615) (120 samples, 0.12%)</title><rect x="0.7237%" y="196" width="0.1230%" height="15" fill="rgb(221,200,47)" fg:x="706" fg:w="120"/><text x="0.9737%" y="206.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (637 samples, 0.65%)</title><rect x="1.0886%" y="244" width="0.6529%" height="15" fill="rgb(226,26,5)" fg:x="1062" fg:w="637"/><text x="1.3386%" y="254.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (681 samples, 0.70%)</title><rect x="1.0558%" y="228" width="0.6980%" height="15" fill="rgb(249,33,26)" fg:x="1030" fg:w="681"/><text x="1.3058%" y="238.50"></text></g><g><title>load (sourmash/sbt_storage.py:158) (754 samples, 0.77%)</title><rect x="1.0291%" y="212" width="0.7729%" height="15" fill="rgb(235,183,28)" fg:x="1004" fg:w="754"/><text x="1.2791%" y="222.50"></text></g><g><title>signatures (sourmash/index/__init__.py:616) (1,070 samples, 1.10%)</title><rect x="0.8467%" y="196" width="1.0968%" height="15" fill="rgb(221,5,38)" fg:x="826" fg:w="1070"/><text x="1.0967%" y="206.50"></text></g><g><title>load_signatures (sourmash/signature.py:374) (216 samples, 0.22%)</title><rect x="2.1177%" y="212" width="0.2214%" height="15" fill="rgb(247,18,42)" fg:x="2066" fg:w="216"/><text x="2.3677%" y="222.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (49,986 samples, 51.24%)</title><rect x="2.4119%" y="228" width="51.2372%" height="15" fill="rgb(241,131,45)" fg:x="2353" fg:w="49986"/><text x="2.6619%" y="238.50">rustcall (sourmash/utils.py:68)</text></g><g><title>load_signatures (sourmash/signature.py:406) (50,061 samples, 51.31%)</title><rect x="2.3832%" y="212" width="51.3141%" height="15" fill="rgb(249,31,29)" fg:x="2325" fg:w="50061"/><text x="2.6332%" y="222.50">load_signatures (sourmash/signature.py:406)</text></g><g><title>__copy__ (sourmash/signature.py:229) (286 samples, 0.29%)</title><rect x="53.8951%" y="244" width="0.2932%" height="15" fill="rgb(225,111,53)" fg:x="52579" fg:w="286"/><text x="54.1451%" y="254.50"></text></g><g><title>__copy__ (sourmash/signature.py:230) (136 samples, 0.14%)</title><rect x="54.1883%" y="244" width="0.1394%" height="15" fill="rgb(238,160,17)" fg:x="52865" fg:w="136"/><text x="54.4383%" y="254.50"></text></g><g><title>__copy__ (sourmash/signature.py:231) (180 samples, 0.18%)</title><rect x="54.3277%" y="244" width="0.1845%" height="15" fill="rgb(214,148,48)" fg:x="53001" fg:w="180"/><text x="54.5777%" y="254.50"></text></g><g><title>name (sourmash/signature.py:98) (161 samples, 0.17%)</title><rect x="54.3472%" y="260" width="0.1650%" height="15" fill="rgb(232,36,49)" fg:x="53020" fg:w="161"/><text x="54.5972%" y="270.50"></text></g><g><title>to_frozen (sourmash/signature.py:240) (668 samples, 0.68%)</title><rect x="53.8849%" y="228" width="0.6847%" height="15" fill="rgb(209,103,24)" fg:x="52569" fg:w="668"/><text x="54.1349%" y="238.50"></text></g><g><title>load_signatures (sourmash/signature.py:424) (702 samples, 0.72%)</title><rect x="53.8685%" y="212" width="0.7196%" height="15" fill="rgb(229,88,8)" fg:x="52553" fg:w="702"/><text x="54.1185%" y="222.50"></text></g><g><title>signatures (sourmash/index/__init__.py:617) (51,361 samples, 52.65%)</title><rect x="1.9435%" y="196" width="52.6466%" height="15" fill="rgb(213,181,19)" fg:x="1896" fg:w="51361"/><text x="2.1935%" y="206.50">signatures (sourmash/index/__init__.py:617)</text></g><g><title>__contains__ (sourmash/manifest.py:337) (135 samples, 0.14%)</title><rect x="54.6157%" y="212" width="0.1384%" height="15" fill="rgb(254,191,54)" fg:x="53282" fg:w="135"/><text x="54.8657%" y="222.50"></text></g><g><title>md5sum (sourmash/signature.py:83) (126 samples, 0.13%)</title><rect x="54.6249%" y="228" width="0.1292%" height="15" fill="rgb(241,83,37)" fg:x="53291" fg:w="126"/><text x="54.8749%" y="238.50"></text></g><g><title>signatures (sourmash/index/__init__.py:620) (207 samples, 0.21%)</title><rect x="54.5901%" y="196" width="0.2122%" height="15" fill="rgb(233,36,39)" fg:x="53257" fg:w="207"/><text x="54.8401%" y="206.50"></text></g><g><title>signatures_with_location (sourmash/index/__init__.py:79) (52,770 samples, 54.09%)</title><rect x="0.7226%" y="180" width="54.0909%" height="15" fill="rgb(226,3,54)" fg:x="705" fg:w="52770"/><text x="0.9726%" y="190.50">signatures_with_location (sourmash/index/__init__.py:79)</text></g><g><title>find (sourmash/index/__init__.py:146) (52,983 samples, 54.31%)</title><rect x="0.6550%" y="164" width="54.3092%" height="15" fill="rgb(245,192,40)" fg:x="639" fg:w="52983"/><text x="0.9050%" y="174.50">find (sourmash/index/__init__.py:146)</text></g><g><title>signatures_with_location (sourmash/index/__init__.py:80) (147 samples, 0.15%)</title><rect x="54.8135%" y="180" width="0.1507%" height="15" fill="rgb(238,167,29)" fg:x="53475" fg:w="147"/><text x="55.0635%" y="190.50"></text></g><g><title>location (sourmash/index/__init__.py:569) (128 samples, 0.13%)</title><rect x="54.8330%" y="196" width="0.1312%" height="15" fill="rgb(232,182,51)" fg:x="53494" fg:w="128"/><text x="55.0830%" y="206.50"></text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:108) (142 samples, 0.15%)</title><rect x="55.0975%" y="196" width="0.1456%" height="15" fill="rgb(231,60,39)" fg:x="53752" fg:w="142"/><text x="55.3475%" y="206.50"></text></g><g><title>scaled (sourmash/minhash.py:526) (107 samples, 0.11%)</title><rect x="55.1334%" y="212" width="0.1097%" height="15" fill="rgb(208,69,12)" fg:x="53787" fg:w="107"/><text x="55.3834%" y="222.50"></text></g><g><title>flatten (sourmash/minhash.py:678) (130 samples, 0.13%)</title><rect x="55.3394%" y="228" width="0.1333%" height="15" fill="rgb(235,93,37)" fg:x="53988" fg:w="130"/><text x="55.5894%" y="238.50"></text></g><g><title>flatten (sourmash/minhash.py:679) (125 samples, 0.13%)</title><rect x="55.4726%" y="228" width="0.1281%" height="15" fill="rgb(213,116,39)" fg:x="54118" fg:w="125"/><text x="55.7226%" y="238.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (802 samples, 0.82%)</title><rect x="55.7340%" y="276" width="0.8221%" height="15" fill="rgb(222,207,29)" fg:x="54373" fg:w="802"/><text x="55.9840%" y="286.50"></text></g><g><title>flatten (sourmash/minhash.py:1099) (1,229 samples, 1.26%)</title><rect x="55.3035%" y="212" width="1.2598%" height="15" fill="rgb(206,96,30)" fg:x="53953" fg:w="1229"/><text x="55.5535%" y="222.50"></text></g><g><title>flatten (sourmash/minhash.py:683) (842 samples, 0.86%)</title><rect x="55.7002%" y="228" width="0.8631%" height="15" fill="rgb(218,138,4)" fg:x="54340" fg:w="842"/><text x="55.9502%" y="238.50"></text></g><g><title>add_many (sourmash/minhash.py:452) (826 samples, 0.85%)</title><rect x="55.7166%" y="244" width="0.8467%" height="15" fill="rgb(250,191,14)" fg:x="54356" fg:w="826"/><text x="55.9666%" y="254.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (820 samples, 0.84%)</title><rect x="55.7227%" y="260" width="0.8405%" height="15" fill="rgb(239,60,40)" fg:x="54362" fg:w="820"/><text x="55.9727%" y="270.50"></text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:111) (1,290 samples, 1.32%)</title><rect x="55.2625%" y="196" width="1.3223%" height="15" fill="rgb(206,27,48)" fg:x="53913" fg:w="1290"/><text x="55.5125%" y="206.50"></text></g><g><title>find (sourmash/index/__init__.py:147) (1,631 samples, 1.67%)</title><rect x="54.9642%" y="164" width="1.6718%" height="15" fill="rgb(225,35,8)" fg:x="53622" fg:w="1631"/><text x="55.2142%" y="174.50"></text></g><g><title>prepare_subject (sourmash/index/__init__.py:131) (1,510 samples, 1.55%)</title><rect x="55.0883%" y="180" width="1.5478%" height="15" fill="rgb(250,213,24)" fg:x="53743" fg:w="1510"/><text x="55.3383%" y="190.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (14,676 samples, 15.04%)</title><rect x="56.8513%" y="212" width="15.0434%" height="15" fill="rgb(247,123,22)" fg:x="55463" fg:w="14676"/><text x="57.1013%" y="222.50">rustcall (sourmash/util..</text></g><g><title>minhash (sourmash/signature.py:47) (14,773 samples, 15.14%)</title><rect x="56.8124%" y="180" width="15.1428%" height="15" fill="rgb(231,138,38)" fg:x="55425" fg:w="14773"/><text x="57.0624%" y="190.50">minhash (sourmash/signa..</text></g><g><title>_methodcall (sourmash/utils.py:25) (14,762 samples, 15.13%)</title><rect x="56.8236%" y="196" width="15.1315%" height="15" fill="rgb(231,145,46)" fg:x="55436" fg:w="14762"/><text x="57.0736%" y="206.50">_methodcall (sourmash/u..</text></g><g><title>find (sourmash/index/__init__.py:149) (15,358 samples, 15.74%)</title><rect x="56.6361%" y="164" width="15.7424%" height="15" fill="rgb(251,118,11)" fg:x="55253" fg:w="15358"/><text x="56.8861%" y="174.50">find (sourmash/index/__i..</text></g><g><title>prepare_query (sourmash/index/__init__.py:134) (413 samples, 0.42%)</title><rect x="71.9551%" y="180" width="0.4233%" height="15" fill="rgb(217,147,25)" fg:x="70198" fg:w="413"/><text x="72.2051%" y="190.50"></text></g><g><title>scaled (sourmash/minhash.py:526) (143 samples, 0.15%)</title><rect x="72.2319%" y="196" width="0.1466%" height="15" fill="rgb(247,81,37)" fg:x="70468" fg:w="143"/><text x="72.4819%" y="206.50"></text></g><g><title>_get_scaled_for_max_hash (sourmash/minhash.py:66) (121 samples, 0.12%)</title><rect x="72.2545%" y="212" width="0.1240%" height="15" fill="rgb(209,12,38)" fg:x="70490" fg:w="121"/><text x="72.5045%" y="222.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (23,033 samples, 23.61%)</title><rect x="72.5650%" y="212" width="23.6095%" height="15" fill="rgb(227,1,9)" fg:x="70793" fg:w="23033"/><text x="72.8150%" y="222.50">rustcall (sourmash/utils.py:68)</text></g><g><title>intersection_and_union_size (sourmash/minhash.py:617) (23,101 samples, 23.68%)</title><rect x="72.5343%" y="180" width="23.6792%" height="15" fill="rgb(248,47,43)" fg:x="70763" fg:w="23101"/><text x="72.7843%" y="190.50">intersection_and_union_size (sourmash/..</text></g><g><title>_methodcall (sourmash/utils.py:25) (23,089 samples, 23.67%)</title><rect x="72.5466%" y="196" width="23.6669%" height="15" fill="rgb(221,10,30)" fg:x="70775" fg:w="23089"/><text x="72.7966%" y="206.50">_methodcall (sourmash/utils.py:25)</text></g><g><title>find (sourmash/index/__init__.py:154) (23,272 samples, 23.85%)</title><rect x="72.4092%" y="164" width="23.8545%" height="15" fill="rgb(210,229,1)" fg:x="70641" fg:w="23272"/><text x="72.6592%" y="174.50">find (sourmash/index/__init__.py:154)</text></g><g><title>find (sourmash/index/__init__.py:156) (130 samples, 0.13%)</title><rect x="96.2638%" y="164" width="0.1333%" height="15" fill="rgb(222,148,37)" fg:x="93913" fg:w="130"/><text x="96.5138%" y="174.50"></text></g><g><title>counter_gather (sourmash/index/__init__.py:303) (93,510 samples, 95.85%)</title><rect x="0.6509%" y="132" width="95.8507%" height="15" fill="rgb(234,67,33)" fg:x="635" fg:w="93510"/><text x="0.9009%" y="142.50">counter_gather (sourmash/index/__init__.py:303)</text></g><g><title>prefetch (sourmash/index/__init__.py:240) (93,506 samples, 95.85%)</title><rect x="0.6550%" y="148" width="95.8466%" height="15" fill="rgb(247,98,35)" fg:x="639" fg:w="93506"/><text x="0.9050%" y="158.50">prefetch (sourmash/index/__init__.py:240)</text></g><g><title>gather (sourmash/commands.py:760) (93,526 samples, 95.87%)</title><rect x="0.6509%" y="116" width="95.8671%" height="15" fill="rgb(247,138,52)" fg:x="635" fg:w="93526"/><text x="0.9009%" y="126.50">gather (sourmash/commands.py:760)</text></g><g><title>gather (sourmash/commands.py:771) (2,748 samples, 2.82%)</title><rect x="96.5723%" y="116" width="2.8168%" height="15" fill="rgb(213,79,30)" fg:x="94214" fg:w="2748"/><text x="96.8223%" y="126.50">ga..</text></g><g><title>remove_many (sourmash/minhash.py:463) (2,748 samples, 2.82%)</title><rect x="96.5723%" y="132" width="2.8168%" height="15" fill="rgb(246,177,23)" fg:x="94214" fg:w="2748"/><text x="96.8223%" y="142.50">re..</text></g><g><title>_methodcall (sourmash/utils.py:25) (2,748 samples, 2.82%)</title><rect x="96.5723%" y="148" width="2.8168%" height="15" fill="rgb(230,62,27)" fg:x="94214" fg:w="2748"/><text x="96.8223%" y="158.50">_m..</text></g><g><title>rustcall (sourmash/utils.py:68) (2,748 samples, 2.82%)</title><rect x="96.5723%" y="164" width="2.8168%" height="15" fill="rgb(216,154,8)" fg:x="94214" fg:w="2748"/><text x="96.8223%" y="174.50">ru..</text></g><g><title>gather (sourmash/commands.py:815) (294 samples, 0.30%)</title><rect x="99.4854%" y="116" width="0.3014%" height="15" fill="rgb(244,35,45)" fg:x="97056" fg:w="294"/><text x="99.7354%" y="126.50"></text></g><g><title>__next__ (sourmash/search.py:794) (109 samples, 0.11%)</title><rect x="99.6751%" y="132" width="0.1117%" height="15" fill="rgb(251,115,12)" fg:x="97241" fg:w="109"/><text x="99.9251%" y="142.50"></text></g><g><title>__init__ (&lt;string&gt;:19) (109 samples, 0.11%)</title><rect x="99.6751%" y="148" width="0.1117%" height="15" fill="rgb(240,54,50)" fg:x="97241" fg:w="109"/><text x="99.9251%" y="158.50"></text></g><g><title>main (sourmash/__main__.py:13) (97,352 samples, 99.79%)</title><rect x="0.0000%" y="84" width="99.7888%" height="15" fill="rgb(233,84,52)" fg:x="0" fg:w="97352"/><text x="0.2500%" y="94.50">main (sourmash/__main__.py:13)</text></g><g><title>main (sourmash/cli/gather.py:158) (97,352 samples, 99.79%)</title><rect x="0.0000%" y="100" width="99.7888%" height="15" fill="rgb(207,117,47)" fg:x="0" fg:w="97352"/><text x="0.2500%" y="110.50">main (sourmash/cli/gather.py:158)</text></g><g><title>&lt;module&gt; (sourmash:11) (97,361 samples, 99.80%)</title><rect x="0.0000%" y="68" width="99.7981%" height="15" fill="rgb(249,43,39)" fg:x="0" fg:w="97361"/><text x="0.2500%" y="78.50">&lt;module&gt; (sourmash:11)</text></g><g><title>&lt;module&gt; (sourmash/__init__.py:50) (136 samples, 0.14%)</title><rect x="99.8493%" y="212" width="0.1394%" height="15" fill="rgb(209,38,44)" fg:x="97411" fg:w="136"/><text x="100.0993%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (136 samples, 0.14%)</title><rect x="99.8493%" y="228" width="0.1394%" height="15" fill="rgb(236,212,23)" fg:x="97411" fg:w="136"/><text x="100.0993%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (136 samples, 0.14%)</title><rect x="99.8493%" y="244" width="0.1394%" height="15" fill="rgb(242,79,21)" fg:x="97411" fg:w="136"/><text x="100.0993%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (136 samples, 0.14%)</title><rect x="99.8493%" y="260" width="0.1394%" height="15" fill="rgb(211,96,35)" fg:x="97411" fg:w="136"/><text x="100.0993%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (136 samples, 0.14%)</title><rect x="99.8493%" y="276" width="0.1394%" height="15" fill="rgb(253,215,40)" fg:x="97411" fg:w="136"/><text x="100.0993%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (136 samples, 0.14%)</title><rect x="99.8493%" y="292" width="0.1394%" height="15" fill="rgb(211,81,21)" fg:x="97411" fg:w="136"/><text x="100.0993%" y="302.50"></text></g><g><title>&lt;module&gt; (sourmash/minhash.py:9) (135 samples, 0.14%)</title><rect x="99.8503%" y="308" width="0.1384%" height="15" fill="rgb(208,190,38)" fg:x="97412" fg:w="135"/><text x="100.1003%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (135 samples, 0.14%)</title><rect x="99.8503%" y="324" width="0.1384%" height="15" fill="rgb(235,213,38)" fg:x="97412" fg:w="135"/><text x="100.1003%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (135 samples, 0.14%)</title><rect x="99.8503%" y="340" width="0.1384%" height="15" fill="rgb(237,122,38)" fg:x="97412" fg:w="135"/><text x="100.1003%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (135 samples, 0.14%)</title><rect x="99.8503%" y="356" width="0.1384%" height="15" fill="rgb(244,218,35)" fg:x="97412" fg:w="135"/><text x="100.1003%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (135 samples, 0.14%)</title><rect x="99.8503%" y="372" width="0.1384%" height="15" fill="rgb(240,68,47)" fg:x="97412" fg:w="135"/><text x="100.1003%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (135 samples, 0.14%)</title><rect x="99.8503%" y="388" width="0.1384%" height="15" fill="rgb(210,16,53)" fg:x="97412" fg:w="135"/><text x="100.1003%" y="398.50"></text></g><g><title>&lt;module&gt; (sourmash:7) (189 samples, 0.19%)</title><rect x="99.7981%" y="68" width="0.1937%" height="15" fill="rgb(235,124,12)" fg:x="97361" fg:w="189"/><text x="100.0481%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (189 samples, 0.19%)</title><rect x="99.7981%" y="84" width="0.1937%" height="15" fill="rgb(224,169,11)" fg:x="97361" fg:w="189"/><text x="100.0481%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (189 samples, 0.19%)</title><rect x="99.7981%" y="100" width="0.1937%" height="15" fill="rgb(250,166,2)" fg:x="97361" fg:w="189"/><text x="100.0481%" y="110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (189 samples, 0.19%)</title><rect x="99.7981%" y="116" width="0.1937%" height="15" fill="rgb(242,216,29)" fg:x="97361" fg:w="189"/><text x="100.0481%" y="126.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (189 samples, 0.19%)</title><rect x="99.7981%" y="132" width="0.1937%" height="15" fill="rgb(230,116,27)" fg:x="97361" fg:w="189"/><text x="100.0481%" y="142.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (189 samples, 0.19%)</title><rect x="99.7981%" y="148" width="0.1937%" height="15" fill="rgb(228,99,48)" fg:x="97361" fg:w="189"/><text x="100.0481%" y="158.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (189 samples, 0.19%)</title><rect x="99.7981%" y="164" width="0.1937%" height="15" fill="rgb(253,11,6)" fg:x="97361" fg:w="189"/><text x="100.0481%" y="174.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (189 samples, 0.19%)</title><rect x="99.7981%" y="180" width="0.1937%" height="15" fill="rgb(247,143,39)" fg:x="97361" fg:w="189"/><text x="100.0481%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (189 samples, 0.19%)</title><rect x="99.7981%" y="196" width="0.1937%" height="15" fill="rgb(236,97,10)" fg:x="97361" fg:w="189"/><text x="100.0481%" y="206.50"></text></g><g><title>all (97,558 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(233,208,19)" fg:x="0" fg:w="97558"/><text x="0.2500%" y="62.50"></text></g></svg></svg>