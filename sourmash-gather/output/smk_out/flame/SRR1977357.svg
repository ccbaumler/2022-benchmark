<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="426" onload="init(evt)" viewBox="0 0 1200 426" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="426" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o ../../output/smk_out/flame/SRR1977357.svg -- sourmash gather ../../input/hu/SRR1977357.abundtrim.fq.gz.sig /group/ctbrowngrp/sourmash-db/gtdb-rs207/gtdb-rs207.genomic-reps.dna.k31.zip -o ../../output/smk_out/flame/csv/SRR1977357.csv</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="415.00"> </text><svg id="frames" x="10" width="1180" total_samples="91317"><g><title>load_signatures (sourmash/signature.py:393) (207 samples, 0.23%)</title><rect x="0.0394%" y="244" width="0.2267%" height="15" fill="rgb(227,0,7)" fg:x="36" fg:w="207"/><text x="0.2894%" y="254.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (207 samples, 0.23%)</title><rect x="0.0394%" y="260" width="0.2267%" height="15" fill="rgb(217,0,24)" fg:x="36" fg:w="207"/><text x="0.2894%" y="270.50"></text></g><g><title>load_from_path (sourmash/index/__init__.py:1020) (208 samples, 0.23%)</title><rect x="0.0394%" y="196" width="0.2278%" height="15" fill="rgb(221,193,54)" fg:x="36" fg:w="208"/><text x="0.2894%" y="206.50"></text></g><g><title>load (sourmash/index/__init__.py:408) (208 samples, 0.23%)</title><rect x="0.0394%" y="212" width="0.2278%" height="15" fill="rgb(248,212,6)" fg:x="36" fg:w="208"/><text x="0.2894%" y="222.50"></text></g><g><title>__init__ (sourmash/index/__init__.py:378) (208 samples, 0.23%)</title><rect x="0.0394%" y="228" width="0.2278%" height="15" fill="rgb(208,68,35)" fg:x="36" fg:w="208"/><text x="0.2894%" y="238.50"></text></g><g><title>_load_database (sourmash/sourmash_args.py:453) (235 samples, 0.26%)</title><rect x="0.0131%" y="164" width="0.2573%" height="15" fill="rgb(232,128,0)" fg:x="12" fg:w="235"/><text x="0.2631%" y="174.50"></text></g><g><title>_multiindex_load_from_path (sourmash/sourmash_args.py:383) (211 samples, 0.23%)</title><rect x="0.0394%" y="180" width="0.2311%" height="15" fill="rgb(207,160,47)" fg:x="36" fg:w="211"/><text x="0.2894%" y="190.50"></text></g><g><title>gather (sourmash/commands.py:700) (236 samples, 0.26%)</title><rect x="0.0131%" y="116" width="0.2584%" height="15" fill="rgb(228,23,34)" fg:x="12" fg:w="236"/><text x="0.2631%" y="126.50"></text></g><g><title>load_query_signature (sourmash/sourmash_args.py:213) (236 samples, 0.26%)</title><rect x="0.0131%" y="132" width="0.2584%" height="15" fill="rgb(218,30,26)" fg:x="12" fg:w="236"/><text x="0.2631%" y="142.50"></text></g><g><title>load_file_as_signatures (sourmash/sourmash_args.py:536) (236 samples, 0.26%)</title><rect x="0.0131%" y="148" width="0.2584%" height="15" fill="rgb(220,122,19)" fg:x="12" fg:w="236"/><text x="0.2631%" y="158.50"></text></g><g><title>load_from_csv (sourmash/manifest.py:79) (128 samples, 0.14%)</title><rect x="0.3460%" y="228" width="0.1402%" height="15" fill="rgb(250,228,42)" fg:x="316" fg:w="128"/><text x="0.5960%" y="238.50"></text></g><g><title>load_from_csv (sourmash/manifest.py:83) (129 samples, 0.14%)</title><rect x="0.5081%" y="228" width="0.1413%" height="15" fill="rgb(240,193,28)" fg:x="464" fg:w="129"/><text x="0.7581%" y="238.50"></text></g><g><title>_load_database (sourmash/sourmash_args.py:453) (356 samples, 0.39%)</title><rect x="0.2738%" y="148" width="0.3899%" height="15" fill="rgb(216,20,37)" fg:x="250" fg:w="356"/><text x="0.5238%" y="158.50"></text></g><g><title>_load_zipfile (sourmash/sourmash_args.py:416) (344 samples, 0.38%)</title><rect x="0.2869%" y="164" width="0.3767%" height="15" fill="rgb(206,188,39)" fg:x="262" fg:w="344"/><text x="0.5369%" y="174.50"></text></g><g><title>load (sourmash/index/__init__.py:587) (332 samples, 0.36%)</title><rect x="0.3001%" y="180" width="0.3636%" height="15" fill="rgb(217,207,13)" fg:x="274" fg:w="332"/><text x="0.5501%" y="190.50"></text></g><g><title>__init__ (sourmash/index/__init__.py:520) (332 samples, 0.36%)</title><rect x="0.3001%" y="196" width="0.3636%" height="15" fill="rgb(231,73,38)" fg:x="274" fg:w="332"/><text x="0.5501%" y="206.50"></text></g><g><title>_load_manifest (sourmash/index/__init__.py:542) (290 samples, 0.32%)</title><rect x="0.3460%" y="212" width="0.3176%" height="15" fill="rgb(225,20,46)" fg:x="316" fg:w="290"/><text x="0.5960%" y="222.50"></text></g><g><title>load_dbs_and_sigs (sourmash/sourmash_args.py:308) (361 samples, 0.40%)</title><rect x="0.2738%" y="132" width="0.3953%" height="15" fill="rgb(210,31,41)" fg:x="250" fg:w="361"/><text x="0.5238%" y="142.50"></text></g><g><title>gather (sourmash/commands.py:725) (369 samples, 0.40%)</title><rect x="0.2738%" y="116" width="0.4041%" height="15" fill="rgb(221,200,47)" fg:x="250" fg:w="369"/><text x="0.5238%" y="126.50"></text></g><g><title>signatures (sourmash/index/__init__.py:615) (120 samples, 0.13%)</title><rect x="0.8345%" y="196" width="0.1314%" height="15" fill="rgb(226,26,5)" fg:x="762" fg:w="120"/><text x="1.0845%" y="206.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (611 samples, 0.67%)</title><rect x="1.2090%" y="244" width="0.6691%" height="15" fill="rgb(249,33,26)" fg:x="1104" fg:w="611"/><text x="1.4590%" y="254.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (647 samples, 0.71%)</title><rect x="1.1783%" y="228" width="0.7085%" height="15" fill="rgb(235,183,28)" fg:x="1076" fg:w="647"/><text x="1.4283%" y="238.50"></text></g><g><title>load (sourmash/sbt_storage.py:158) (717 samples, 0.79%)</title><rect x="1.1477%" y="212" width="0.7852%" height="15" fill="rgb(221,5,38)" fg:x="1048" fg:w="717"/><text x="1.3977%" y="222.50"></text></g><g><title>signatures (sourmash/index/__init__.py:616) (1,036 samples, 1.13%)</title><rect x="0.9659%" y="196" width="1.1345%" height="15" fill="rgb(247,18,42)" fg:x="882" fg:w="1036"/><text x="1.2159%" y="206.50"></text></g><g><title>load (sourmash/sbt_storage.py:165) (95 samples, 0.10%)</title><rect x="1.9963%" y="212" width="0.1040%" height="15" fill="rgb(241,131,45)" fg:x="1823" fg:w="95"/><text x="2.2463%" y="222.50"></text></g><g><title>load_signatures (sourmash/signature.py:374) (224 samples, 0.25%)</title><rect x="2.3084%" y="212" width="0.2453%" height="15" fill="rgb(249,31,29)" fg:x="2108" fg:w="224"/><text x="2.5584%" y="222.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (46,823 samples, 51.28%)</title><rect x="2.6326%" y="228" width="51.2752%" height="15" fill="rgb(225,111,53)" fg:x="2404" fg:w="46823"/><text x="2.8826%" y="238.50">rustcall (sourmash/utils.py:68)</text></g><g><title>load_signatures (sourmash/signature.py:406) (46,926 samples, 51.39%)</title><rect x="2.6030%" y="212" width="51.3880%" height="15" fill="rgb(238,160,17)" fg:x="2377" fg:w="46926"/><text x="2.8530%" y="222.50">load_signatures (sourmash/signature.py:406)</text></g><g><title>__init__ (sourmash/signature.py:37) (102 samples, 0.11%)</title><rect x="54.3612%" y="260" width="0.1117%" height="15" fill="rgb(214,148,48)" fg:x="49641" fg:w="102"/><text x="54.6112%" y="270.50"></text></g><g><title>name (sourmash/signature.py:102) (92 samples, 0.10%)</title><rect x="54.3721%" y="276" width="0.1007%" height="15" fill="rgb(232,36,49)" fg:x="49651" fg:w="92"/><text x="54.6221%" y="286.50"></text></g><g><title>__copy__ (sourmash/signature.py:229) (335 samples, 0.37%)</title><rect x="54.2309%" y="244" width="0.3669%" height="15" fill="rgb(209,103,24)" fg:x="49522" fg:w="335"/><text x="54.4809%" y="254.50"></text></g><g><title>__copy__ (sourmash/signature.py:230) (208 samples, 0.23%)</title><rect x="54.5977%" y="244" width="0.2278%" height="15" fill="rgb(229,88,8)" fg:x="49857" fg:w="208"/><text x="54.8477%" y="254.50"></text></g><g><title>minhash (sourmash/signature.py:47) (157 samples, 0.17%)</title><rect x="54.6536%" y="260" width="0.1719%" height="15" fill="rgb(213,181,19)" fg:x="49908" fg:w="157"/><text x="54.9036%" y="270.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (147 samples, 0.16%)</title><rect x="54.6645%" y="276" width="0.1610%" height="15" fill="rgb(254,191,54)" fg:x="49918" fg:w="147"/><text x="54.9145%" y="286.50"></text></g><g><title>__copy__ (sourmash/signature.py:231) (192 samples, 0.21%)</title><rect x="54.8255%" y="244" width="0.2103%" height="15" fill="rgb(241,83,37)" fg:x="50065" fg:w="192"/><text x="55.0755%" y="254.50"></text></g><g><title>name (sourmash/signature.py:98) (180 samples, 0.20%)</title><rect x="54.8386%" y="260" width="0.1971%" height="15" fill="rgb(233,36,39)" fg:x="50077" fg:w="180"/><text x="55.0886%" y="270.50"></text></g><g><title>to_frozen (sourmash/signature.py:240) (803 samples, 0.88%)</title><rect x="54.2199%" y="228" width="0.8794%" height="15" fill="rgb(226,3,54)" fg:x="49512" fg:w="803"/><text x="54.4699%" y="238.50"></text></g><g><title>load_signatures (sourmash/signature.py:424) (851 samples, 0.93%)</title><rect x="54.1980%" y="212" width="0.9319%" height="15" fill="rgb(245,192,40)" fg:x="49492" fg:w="851"/><text x="54.4480%" y="222.50"></text></g><g><title>signatures (sourmash/index/__init__.py:617) (48,427 samples, 53.03%)</title><rect x="2.1004%" y="196" width="53.0317%" height="15" fill="rgb(238,167,29)" fg:x="1918" fg:w="48427"/><text x="2.3504%" y="206.50">signatures (sourmash/index/__init__.py:617)</text></g><g><title>__contains__ (sourmash/manifest.py:337) (163 samples, 0.18%)</title><rect x="55.1781%" y="212" width="0.1785%" height="15" fill="rgb(232,182,51)" fg:x="50387" fg:w="163"/><text x="55.4281%" y="222.50"></text></g><g><title>md5sum (sourmash/signature.py:83) (152 samples, 0.17%)</title><rect x="55.1902%" y="228" width="0.1665%" height="15" fill="rgb(231,60,39)" fg:x="50398" fg:w="152"/><text x="55.4402%" y="238.50"></text></g><g><title>signatures (sourmash/index/__init__.py:620) (277 samples, 0.30%)</title><rect x="55.1321%" y="196" width="0.3033%" height="15" fill="rgb(208,69,12)" fg:x="50345" fg:w="277"/><text x="55.3821%" y="206.50"></text></g><g><title>signatures_with_location (sourmash/index/__init__.py:79) (49,879 samples, 54.62%)</title><rect x="0.8290%" y="180" width="54.6218%" height="15" fill="rgb(235,93,37)" fg:x="757" fg:w="49879"/><text x="1.0790%" y="190.50">signatures_with_location (sourmash/index/__init__.py:79)</text></g><g><title>find (sourmash/index/__init__.py:146) (50,095 samples, 54.86%)</title><rect x="0.7512%" y="164" width="54.8584%" height="15" fill="rgb(213,116,39)" fg:x="686" fg:w="50095"/><text x="1.0012%" y="174.50">find (sourmash/index/__init__.py:146)</text></g><g><title>signatures_with_location (sourmash/index/__init__.py:80) (145 samples, 0.16%)</title><rect x="55.4508%" y="180" width="0.1588%" height="15" fill="rgb(222,207,29)" fg:x="50636" fg:w="145"/><text x="55.7008%" y="190.50"></text></g><g><title>location (sourmash/index/__init__.py:569) (111 samples, 0.12%)</title><rect x="55.4880%" y="196" width="0.1216%" height="15" fill="rgb(206,96,30)" fg:x="50670" fg:w="111"/><text x="55.7380%" y="206.50"></text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:108) (153 samples, 0.17%)</title><rect x="55.7684%" y="196" width="0.1675%" height="15" fill="rgb(218,138,4)" fg:x="50926" fg:w="153"/><text x="56.0184%" y="206.50"></text></g><g><title>scaled (sourmash/minhash.py:526) (111 samples, 0.12%)</title><rect x="55.8144%" y="212" width="0.1216%" height="15" fill="rgb(250,191,14)" fg:x="50968" fg:w="111"/><text x="56.0644%" y="222.50"></text></g><g><title>_get_scaled_for_max_hash (sourmash/minhash.py:66) (93 samples, 0.10%)</title><rect x="55.8341%" y="228" width="0.1018%" height="15" fill="rgb(239,60,40)" fg:x="50986" fg:w="93"/><text x="56.0841%" y="238.50"></text></g><g><title>flatten (sourmash/minhash.py:678) (162 samples, 0.18%)</title><rect x="56.0619%" y="228" width="0.1774%" height="15" fill="rgb(206,27,48)" fg:x="51194" fg:w="162"/><text x="56.3119%" y="238.50"></text></g><g><title>ksize (sourmash/minhash.py:548) (100 samples, 0.11%)</title><rect x="56.2754%" y="244" width="0.1095%" height="15" fill="rgb(225,35,8)" fg:x="51389" fg:w="100"/><text x="56.5254%" y="254.50"></text></g><g><title>flatten (sourmash/minhash.py:679) (154 samples, 0.17%)</title><rect x="56.2393%" y="228" width="0.1686%" height="15" fill="rgb(250,213,24)" fg:x="51356" fg:w="154"/><text x="56.4893%" y="238.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (793 samples, 0.87%)</title><rect x="56.5382%" y="276" width="0.8684%" height="15" fill="rgb(247,123,22)" fg:x="51629" fg:w="793"/><text x="56.7882%" y="286.50"></text></g><g><title>add_many (sourmash/minhash.py:452) (811 samples, 0.89%)</title><rect x="56.5273%" y="244" width="0.8881%" height="15" fill="rgb(231,138,38)" fg:x="51619" fg:w="811"/><text x="56.7773%" y="254.50"></text></g><g><title>_methodcall (sourmash/utils.py:25) (804 samples, 0.88%)</title><rect x="56.5349%" y="260" width="0.8804%" height="15" fill="rgb(231,145,46)" fg:x="51626" fg:w="804"/><text x="56.7849%" y="270.50"></text></g><g><title>flatten (sourmash/minhash.py:1099) (1,263 samples, 1.38%)</title><rect x="56.0334%" y="212" width="1.3831%" height="15" fill="rgb(251,118,11)" fg:x="51168" fg:w="1263"/><text x="56.2834%" y="222.50"></text></g><g><title>flatten (sourmash/minhash.py:683) (828 samples, 0.91%)</title><rect x="56.5097%" y="228" width="0.9067%" height="15" fill="rgb(217,147,25)" fg:x="51603" fg:w="828"/><text x="56.7597%" y="238.50"></text></g><g><title>flatten_and_downsample_scaled (sourmash/minhash.py:111) (1,340 samples, 1.47%)</title><rect x="55.9797%" y="196" width="1.4674%" height="15" fill="rgb(247,81,37)" fg:x="51119" fg:w="1340"/><text x="56.2297%" y="206.50"></text></g><g><title>find (sourmash/index/__init__.py:147) (1,742 samples, 1.91%)</title><rect x="55.6096%" y="164" width="1.9076%" height="15" fill="rgb(209,12,38)" fg:x="50781" fg:w="1742"/><text x="55.8596%" y="174.50">f..</text></g><g><title>prepare_subject (sourmash/index/__init__.py:131) (1,606 samples, 1.76%)</title><rect x="55.7585%" y="180" width="1.7587%" height="15" fill="rgb(227,1,9)" fg:x="50917" fg:w="1606"/><text x="56.0085%" y="190.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (13,707 samples, 15.01%)</title><rect x="57.7570%" y="212" width="15.0103%" height="15" fill="rgb(248,47,43)" fg:x="52742" fg:w="13707"/><text x="58.0070%" y="222.50">rustcall (sourmash/util..</text></g><g><title>minhash (sourmash/signature.py:47) (13,825 samples, 15.14%)</title><rect x="57.7187%" y="180" width="15.1396%" height="15" fill="rgb(221,10,30)" fg:x="52707" fg:w="13825"/><text x="57.9687%" y="190.50">minhash (sourmash/signa..</text></g><g><title>_methodcall (sourmash/utils.py:25) (13,813 samples, 15.13%)</title><rect x="57.7319%" y="196" width="15.1264%" height="15" fill="rgb(210,229,1)" fg:x="52719" fg:w="13813"/><text x="57.9819%" y="206.50">_methodcall (sourmash/u..</text></g><g><title>scaled (sourmash/minhash.py:524) (94 samples, 0.10%)</title><rect x="73.1266%" y="196" width="0.1029%" height="15" fill="rgb(222,148,37)" fg:x="66777" fg:w="94"/><text x="73.3766%" y="206.50"></text></g><g><title>_get_scaled_for_max_hash (sourmash/minhash.py:66) (137 samples, 0.15%)</title><rect x="73.2777%" y="212" width="0.1500%" height="15" fill="rgb(234,67,33)" fg:x="66915" fg:w="137"/><text x="73.5277%" y="222.50"></text></g><g><title>find (sourmash/index/__init__.py:149) (14,530 samples, 15.91%)</title><rect x="57.5172%" y="164" width="15.9116%" height="15" fill="rgb(247,98,35)" fg:x="52523" fg:w="14530"/><text x="57.7672%" y="174.50">find (sourmash/index/__i..</text></g><g><title>prepare_query (sourmash/index/__init__.py:134) (521 samples, 0.57%)</title><rect x="72.8583%" y="180" width="0.5705%" height="15" fill="rgb(247,138,52)" fg:x="66532" fg:w="521"/><text x="73.1083%" y="190.50"></text></g><g><title>scaled (sourmash/minhash.py:526) (182 samples, 0.20%)</title><rect x="73.2295%" y="196" width="0.1993%" height="15" fill="rgb(213,79,30)" fg:x="66871" fg:w="182"/><text x="73.4795%" y="206.50"></text></g><g><title>rustcall (sourmash/utils.py:68) (20,168 samples, 22.09%)</title><rect x="73.6851%" y="212" width="22.0857%" height="15" fill="rgb(246,177,23)" fg:x="67287" fg:w="20168"/><text x="73.9351%" y="222.50">rustcall (sourmash/utils.py:68)</text></g><g><title>intersection_and_union_size (sourmash/minhash.py:617) (20,274 samples, 22.20%)</title><rect x="73.6303%" y="180" width="22.2018%" height="15" fill="rgb(230,62,27)" fg:x="67237" fg:w="20274"/><text x="73.8803%" y="190.50">intersection_and_union_size (sourma..</text></g><g><title>_methodcall (sourmash/utils.py:25) (20,251 samples, 22.18%)</title><rect x="73.6555%" y="196" width="22.1766%" height="15" fill="rgb(216,154,8)" fg:x="67260" fg:w="20251"/><text x="73.9055%" y="206.50">_methodcall (sourmash/utils.py:25)</text></g><g><title>find (sourmash/index/__init__.py:154) (20,484 samples, 22.43%)</title><rect x="73.4825%" y="164" width="22.4317%" height="15" fill="rgb(244,35,45)" fg:x="67102" fg:w="20484"/><text x="73.7325%" y="174.50">find (sourmash/index/__init__.py:154)</text></g><g><title>find (sourmash/index/__init__.py:156) (159 samples, 0.17%)</title><rect x="95.9142%" y="164" width="0.1741%" height="15" fill="rgb(251,115,12)" fg:x="87586" fg:w="159"/><text x="96.1642%" y="174.50"></text></g><g><title>__len__ (sourmash/minhash.py:469) (108 samples, 0.12%)</title><rect x="95.9701%" y="180" width="0.1183%" height="15" fill="rgb(240,54,50)" fg:x="87637" fg:w="108"/><text x="96.2201%" y="190.50"></text></g><g><title>counter_gather (sourmash/index/__init__.py:303) (87,160 samples, 95.45%)</title><rect x="0.7490%" y="132" width="95.4477%" height="15" fill="rgb(233,84,52)" fg:x="684" fg:w="87160"/><text x="0.9990%" y="142.50">counter_gather (sourmash/index/__init__.py:303)</text></g><g><title>prefetch (sourmash/index/__init__.py:240) (87,159 samples, 95.45%)</title><rect x="0.7501%" y="148" width="95.4466%" height="15" fill="rgb(207,117,47)" fg:x="685" fg:w="87159"/><text x="1.0001%" y="158.50">prefetch (sourmash/index/__init__.py:240)</text></g><g><title>gather (sourmash/commands.py:760) (87,177 samples, 95.47%)</title><rect x="0.7490%" y="116" width="95.4663%" height="15" fill="rgb(249,43,39)" fg:x="684" fg:w="87177"/><text x="0.9990%" y="126.50">gather (sourmash/commands.py:760)</text></g><g><title>gather (sourmash/commands.py:771) (2,675 samples, 2.93%)</title><rect x="96.2712%" y="116" width="2.9294%" height="15" fill="rgb(209,38,44)" fg:x="87912" fg:w="2675"/><text x="96.5212%" y="126.50">ga..</text></g><g><title>remove_many (sourmash/minhash.py:463) (2,675 samples, 2.93%)</title><rect x="96.2712%" y="132" width="2.9294%" height="15" fill="rgb(236,212,23)" fg:x="87912" fg:w="2675"/><text x="96.5212%" y="142.50">re..</text></g><g><title>_methodcall (sourmash/utils.py:25) (2,675 samples, 2.93%)</title><rect x="96.2712%" y="148" width="2.9294%" height="15" fill="rgb(242,79,21)" fg:x="87912" fg:w="2675"/><text x="96.5212%" y="158.50">_m..</text></g><g><title>rustcall (sourmash/utils.py:68) (2,675 samples, 2.93%)</title><rect x="96.2712%" y="164" width="2.9294%" height="15" fill="rgb(211,96,35)" fg:x="87912" fg:w="2675"/><text x="96.5212%" y="174.50">ru..</text></g><g><title>gather (sourmash/commands.py:807) (142 samples, 0.16%)</title><rect x="99.2006%" y="116" width="0.1555%" height="15" fill="rgb(253,215,40)" fg:x="90587" fg:w="142"/><text x="99.4506%" y="126.50"></text></g><g><title>__next__ (sourmash/search.py:788) (96 samples, 0.11%)</title><rect x="99.4798%" y="132" width="0.1051%" height="15" fill="rgb(211,81,21)" fg:x="90842" fg:w="96"/><text x="99.7298%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (sourmash/search.py:788) (94 samples, 0.10%)</title><rect x="99.4820%" y="148" width="0.1029%" height="15" fill="rgb(208,190,38)" fg:x="90844" fg:w="94"/><text x="99.7320%" y="158.50"></text></g><g><title>__post_init__ (sourmash/search.py:514) (107 samples, 0.12%)</title><rect x="99.5850%" y="164" width="0.1172%" height="15" fill="rgb(235,213,38)" fg:x="90938" fg:w="107"/><text x="99.8350%" y="174.50"></text></g><g><title>gather (sourmash/commands.py:815) (367 samples, 0.40%)</title><rect x="99.3561%" y="116" width="0.4019%" height="15" fill="rgb(237,122,38)" fg:x="90729" fg:w="367"/><text x="99.6061%" y="126.50"></text></g><g><title>__next__ (sourmash/search.py:794) (158 samples, 0.17%)</title><rect x="99.5850%" y="132" width="0.1730%" height="15" fill="rgb(244,218,35)" fg:x="90938" fg:w="158"/><text x="99.8350%" y="142.50"></text></g><g><title>__init__ (&lt;string&gt;:19) (158 samples, 0.17%)</title><rect x="99.5850%" y="148" width="0.1730%" height="15" fill="rgb(240,68,47)" fg:x="90938" fg:w="158"/><text x="99.8350%" y="158.50"></text></g><g><title>main (sourmash/__main__.py:13) (91,098 samples, 99.76%)</title><rect x="0.0000%" y="84" width="99.7602%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="91098"/><text x="0.2500%" y="94.50">main (sourmash/__main__.py:13)</text></g><g><title>main (sourmash/cli/gather.py:158) (91,098 samples, 99.76%)</title><rect x="0.0000%" y="100" width="99.7602%" height="15" fill="rgb(235,124,12)" fg:x="0" fg:w="91098"/><text x="0.2500%" y="110.50">main (sourmash/cli/gather.py:158)</text></g><g><title>&lt;module&gt; (sourmash:11) (91,113 samples, 99.78%)</title><rect x="0.0000%" y="68" width="99.7766%" height="15" fill="rgb(224,169,11)" fg:x="0" fg:w="91113"/><text x="0.2500%" y="78.50">&lt;module&gt; (sourmash:11)</text></g><g><title>&lt;module&gt; (sourmash/__init__.py:50) (148 samples, 0.16%)</title><rect x="99.8270%" y="212" width="0.1621%" height="15" fill="rgb(250,166,2)" fg:x="91159" fg:w="148"/><text x="100.0770%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (148 samples, 0.16%)</title><rect x="99.8270%" y="228" width="0.1621%" height="15" fill="rgb(242,216,29)" fg:x="91159" fg:w="148"/><text x="100.0770%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (148 samples, 0.16%)</title><rect x="99.8270%" y="244" width="0.1621%" height="15" fill="rgb(230,116,27)" fg:x="91159" fg:w="148"/><text x="100.0770%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (148 samples, 0.16%)</title><rect x="99.8270%" y="260" width="0.1621%" height="15" fill="rgb(228,99,48)" fg:x="91159" fg:w="148"/><text x="100.0770%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (148 samples, 0.16%)</title><rect x="99.8270%" y="276" width="0.1621%" height="15" fill="rgb(253,11,6)" fg:x="91159" fg:w="148"/><text x="100.0770%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (148 samples, 0.16%)</title><rect x="99.8270%" y="292" width="0.1621%" height="15" fill="rgb(247,143,39)" fg:x="91159" fg:w="148"/><text x="100.0770%" y="302.50"></text></g><g><title>&lt;module&gt; (sourmash/minhash.py:9) (148 samples, 0.16%)</title><rect x="99.8270%" y="308" width="0.1621%" height="15" fill="rgb(236,97,10)" fg:x="91159" fg:w="148"/><text x="100.0770%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (148 samples, 0.16%)</title><rect x="99.8270%" y="324" width="0.1621%" height="15" fill="rgb(233,208,19)" fg:x="91159" fg:w="148"/><text x="100.0770%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (148 samples, 0.16%)</title><rect x="99.8270%" y="340" width="0.1621%" height="15" fill="rgb(216,164,2)" fg:x="91159" fg:w="148"/><text x="100.0770%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (148 samples, 0.16%)</title><rect x="99.8270%" y="356" width="0.1621%" height="15" fill="rgb(220,129,5)" fg:x="91159" fg:w="148"/><text x="100.0770%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (148 samples, 0.16%)</title><rect x="99.8270%" y="372" width="0.1621%" height="15" fill="rgb(242,17,10)" fg:x="91159" fg:w="148"/><text x="100.0770%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (148 samples, 0.16%)</title><rect x="99.8270%" y="388" width="0.1621%" height="15" fill="rgb(242,107,0)" fg:x="91159" fg:w="148"/><text x="100.0770%" y="398.50"></text></g><g><title>&lt;module&gt; (sourmash:7) (197 samples, 0.22%)</title><rect x="99.7766%" y="68" width="0.2157%" height="15" fill="rgb(251,28,31)" fg:x="91113" fg:w="197"/><text x="100.0266%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (197 samples, 0.22%)</title><rect x="99.7766%" y="84" width="0.2157%" height="15" fill="rgb(233,223,10)" fg:x="91113" fg:w="197"/><text x="100.0266%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (197 samples, 0.22%)</title><rect x="99.7766%" y="100" width="0.2157%" height="15" fill="rgb(215,21,27)" fg:x="91113" fg:w="197"/><text x="100.0266%" y="110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (197 samples, 0.22%)</title><rect x="99.7766%" y="116" width="0.2157%" height="15" fill="rgb(232,23,21)" fg:x="91113" fg:w="197"/><text x="100.0266%" y="126.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (197 samples, 0.22%)</title><rect x="99.7766%" y="132" width="0.2157%" height="15" fill="rgb(244,5,23)" fg:x="91113" fg:w="197"/><text x="100.0266%" y="142.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (197 samples, 0.22%)</title><rect x="99.7766%" y="148" width="0.2157%" height="15" fill="rgb(226,81,46)" fg:x="91113" fg:w="197"/><text x="100.0266%" y="158.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (197 samples, 0.22%)</title><rect x="99.7766%" y="164" width="0.2157%" height="15" fill="rgb(247,70,30)" fg:x="91113" fg:w="197"/><text x="100.0266%" y="174.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (197 samples, 0.22%)</title><rect x="99.7766%" y="180" width="0.2157%" height="15" fill="rgb(212,68,19)" fg:x="91113" fg:w="197"/><text x="100.0266%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (197 samples, 0.22%)</title><rect x="99.7766%" y="196" width="0.2157%" height="15" fill="rgb(240,187,13)" fg:x="91113" fg:w="197"/><text x="100.0266%" y="206.50"></text></g><g><title>all (91,317 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(223,113,26)" fg:x="0" fg:w="91317"/><text x="0.2500%" y="62.50"></text></g></svg></svg>